{"version":3,"mappings":"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","names":["ExpandableComponent","constructor","renderer","ngAfterViewInit","this","setStyle","expandWrapper","nativeElement","expandHeight","ngOnInit","i0","selectors","ElementRef","ctx_r8","ctx_r11","ctx_r38","ctx_r44","i","ctx_r49","ctx_r55","oxw","ctx_r57","ctx_r58","ctx_r60","ctx_r61","ctx_r63","ctx_r64","ctx_r87","ctx_r89","ctx_r95","ctx_r102","ctx_r104","ctx_r105","ctx_r106","ctx_r107","ctx_r108","ctx_r109","ctx_r110","ctx_r111","ctx_r112","ctx_r113","ctx_r114","ctx_r116","ctx_r119","ctx_r121","ctx_r122","ctx_r123","ctx_r124","ctx_r125","ctx_r126","ctx_r127","ctx_r128","PollPage","changeDetector","router","route","routerOutlet","loadingController","alertCtrl","popover","modalController","translate","G","Array","Math","Object","window","environment","PI","Set","Map","undefined","L","entry","params","subscribe","pid","ionViewWillEnter","D","page","f","ev","detectChanges","addEventListener","specs","JSON","parse","getp","show_live","details_expanded","incoming_delegation_expanded","option_expanded","exit","ionViewDidEnter","ready","onDataReady","debug","P","polls","warn","navigate","p","state","error","info","tally_all","oidsorted","T","oids_descending","update_order","setTimeout","bind","show_stats","update_delegation_info","on_delegate_toggle_change","have_seen","has_results","have_seen_results","onDataChange","news","N","filter","ionViewWillLeave","oid","delegate","rate_yourself_toggle","set_my_own_rating","round","get_slider_value","auto_dismiss","dismiss","key","setp","stringify","ionViewDidLeave","save_state","n_indirect_clients","get_n_indirect_clients","myvid","cache","incoming_dids_caches","accepted_requests","declined_requests","did","from","url","status","push","startsWith","Del","get_my_outgoing_dids_cache","get","trace","get_delegate_nickname","agreement","get_agreement","delegation_status","update_delegation_toggles","a","accepted_oids","active_oids","has","onScroll","scroll_position","detail","scrollTop","on_rate_yourself_toggle_change","update_my_delegation","sum","b","entries","n_delegated","approval_scores_map","shares_map","approvals_map","votedfor","votes_map","oids","n_not_abstaining","share","bar","document","getElementById","pie","R","pieradius","dx","sin","two_pi","dy","cos","more_than_180_degrees_flag","approved","x","width","baseVal","valueAsString","toString","setAttribute","c","set_slider_color","get_my_proxy_rating","needle","knob","delegate_vid","get_potential_effective_delegate","rating","proxy_ratings_map","x2","cx","force","length","needs_refresh","refresh_paused","dragged_oid","loadingElement","create","message","instant","spinner","duration","present","onDidDismiss","sortingcounter","col","l1","onRatingColPointerdown","l2","onRatingColPointerup","l3","onRatingColTouchstart","l4","onRatingColTouchup","listeners","old","removeEventListener","set","value","slidercolor","toggle_show_live","expand","get_slider","set_slider_values","slider","o","Number","apply_sliders_rating","onRatingSliderFocus","onRatingSliderChange","onRatingSliderBlur","rating_change_ended","have_acted","end_if_past_due","allow_voting","pos","get_knob_pos","PointerEvent","clientX","touches","options","name","left","right","swallow_event","onRatingColClick","onBodyPointerup","onBodyTouchup","slider_rect","get_screen_coords","knob_center_x","element","getBoundingClientRect","DOMRect","stopPropagation","stopImmediatePropagation","preventDefault","checkmark_clicked","buttons","text","role","handler","delegate_dialog","event","component","DelegationDialogPage","translucent","showBackdrop","componentProps","parent","then","popoverElement","assist_dialog","modal","AssistPage","backdropDismiss","currentModal","explain_approval_dialog","ExplainApprovalPage","cssClass","swipeToClose","presentingElement","nativeEl","modalElement","revoke_delegation_dialog","nickname","console","log","revoke_delegation","add_option","AddoptionDialogPage","glossary","glossary_key","show_glossary","dismiss_glossary","IonContent","ctx","routes","path","PollPageRoutingModule","RouterModule","PollPageModule","CommonModule","FormsModule","IonicModule","SharedcomponentsModule","TranslateModule"],"sources":["./src/app/sharedcomponents/expandable/expandable.component.ts","./src/app/sharedcomponents/expandable/expandable.component.html","./src/app/poll/poll.page.html","./src/app/poll/poll.page.ts","./src/app/poll/poll-routing.module.ts","./src/app/poll/poll.module.ts"],"sourcesContent":["import { Component, OnInit, ElementRef, Renderer2, Input, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-expandable',\n  templateUrl: './expandable.component.html',\n  styleUrls: ['./expandable.component.scss']\n})\nexport class ExpandableComponent implements OnInit {\n\n  @ViewChild('expandWrapper', {read: ElementRef}) expandWrapper;\n  @Input('expanded') expanded;\n  @Input('expandHeight') expandHeight;\n\n  constructor(public renderer: Renderer2) {\n\n  }\n\n  ngAfterViewInit(){\n      this.renderer.setStyle(this.expandWrapper.nativeElement, 'height', this.expandHeight + 'px');    \n  }\n\n  ngOnInit() { }\n}\n","<div #expandWrapper class='expand-wrapper' [class.collapsed]=\"!expanded\">\n  <ng-content></ng-content>\n</div>","<!--\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n-->\n\n<!--\n  TODO: \n  - \"fix\" slider element's absolute vertical position on screen while using it, even when note above it changes height. achieve this by automatically \"scrolling\" to compensate such layout changes.  \n-->\n\n<!--\nSuggestion\n\nvodle suggests that you look for a possible compromise between\nY\nand Z.\n\nWhy?\n\nY currently gets the share of A% of the participants, including yours.\nEither: You don't approve Z, but it gets the share of B% of the participants.\nOr: The share of another B% goes to Z.\nTogether, you might be able to agree on a better compromise with all these participants.\n\nHow?\n\nTry to find some other option X that appeals to both groups.\nMaybe this option is already on the list, or you might have to add it.\nThen suggest that all participants whose share now goes to Y or Z \nconsider giving option X a wap of more than 100-C.\nIf they all do so, then they all approve X.\nThe share of all these participants will then move to X.\nYou yourself would have to give X a wap of more than 100-C as well, of course. \nYour share will then also move to X, \nbut only if the others approve X as well.\n\nInstead of having A% Y plus B% Z, you would then have C% X (or more, if even more approve X).\n\n[Diagram: Pie A + Pie B -> Pie C for some other option X?]\n\n-->\n\n<!-- HEADER: -->\n\n<ion-header \n    (pointerup)=\"onBodyPointerup($event)\"\n    (touchup)=\"onBodyTouchup($event)\">\n  <ion-toolbar style=\"padding-right: 11px; padding-left: 16px;\">\n    <ion-buttons slot=\"start\" style=\"margin-right: 0px; margin-left: 0px; padding-left: 0px; padding-right: 0px;\">\n      <ion-menu-button style=\"padding-left: 0px!important; padding-right: 0px!important; position: relative; left: -9px;\"></ion-menu-button>\n    </ion-buttons>\n    <ion-text *ngIf=\"scroll_position < 70\" \n      style=\"font-weight: bold; font-size: larger; padding-left: 0px;\"\n      [innerHtml]=\"'poll.-page-title' | translate\">\n    </ion-text>\n    <ion-text *ngIf=\"scroll_position >= 70\"><b><i [innerHtml]=\"p.title\"></i></b></ion-text>\n    <ion-buttons slot=\"end\">\n\n      <!-- OFFLINE SIGN -->\n      <ng-container *ngIf=\"!window.navigator.onLine\">\n        <ion-icon name=\"cloud-offline-outline\" color=\"grey\"\n          style=\"position: relative; bottom: -1px;\">\n        </ion-icon>\n        <ion-icon name=\"alert-outline\" color=\"grey\">\n        </ion-icon>\n      </ng-container> \n\n      <!-- SYNCING SIGN -->\n      <ion-spinner *ngIf=\"!!p && p.syncing && window.navigator.onLine\" name=\"crescent\" color=\"grey\"></ion-spinner>\n\n      <!-- TRANSMITTED SIGN -->\n      <ion-button *ngIf=\"!!p && p.have_acted && !p.syncing && window.navigator.onLine\" class=\"ion-no-margin ion-no-padding\" fill=\"clear\" (click)=\"checkmark_clicked()\">\n        <ion-icon size=\"large\" name=\"checkmark\" color=\"grey\" slot=\"icon-only\"></ion-icon>\n      </ion-button>\n\n      <!-- DELEGATE BUTTON: -->\n      <ion-button *ngIf=\"!!p && delegation_status!='agreed' && p.allow_voting\"\n          (click)=\"delegate_dialog($event)\" \n          shape=\"round\" size=\"large\" color=\"primary\" class=\"ion-no-padding ion-no-margin\">\n        <span *ngIf=\"scroll_position < 70\"\n          [innerHtml]=\"'poll.delegate-button' | translate\">\n        </span><ion-button class=\"ion-no-margin ion-no-padding\"\n            [disabled]=\"!E.delegation.enabled\"\n            style=\"position: relative; right: -4px;\"\n            shape=\"round\" fill=\"solid\" color=\"primary\">\n          <ion-icon class=\"ion-no-margin ion-no-padding\" src=\"./assets/icon/delegate-simple.svg\">\n          </ion-icon>\n        </ion-button>\n      </ion-button>\n\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<!-- SCROLLABLE CONTENT: -->\n\n<ion-content *ngIf=\"ready && !!p\" \n    (pointerup)=\"onBodyPointerup($event)\"\n    [scrollEvents]=\"true\"\n    (ionScroll)=\"onScroll($event)\"    \n    >\n  <ion-list lines=\"full\" class=\"ion-no-margin ion-no-padding\">\n\n    <!-- NEWS -->\n\n    <ion-card *ngFor=\"let n of news\">\n      <ion-card-content class=\"ion-no-margin ion-no-padding\">\n        <ion-item lines=\"none\" class=\"ion-no-margin ion-no-padding item-text-wrap\" color=\"warning\">\n          &nbsp;&nbsp;\n          <ion-label class=\"ion-no-margin ion-no-padding\">\n            {{n.title}}\n            <small *ngIf=\"n.body\">\n              <br/>\n              {{n.body}}\n            </small>  \n          </ion-label>\n          <ion-button slot=\"end\" class=\"ion-no-margin ion-no-padding\" fill=\"clear\" size=\"small\" (click)=\"news.delete(n);G.N.dismiss(n.key)\">\n            <ion-icon slot=\"icon-only\" name=\"close-outline\" style=\"color:gray!important\">\n            </ion-icon>    \n          </ion-button>  \n        </ion-item>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- GENERAL POLL INFORMATION -->\n\n    <ion-item color=\"primary\" class=\"ion-no-margin\" lines=\"none\">\n      <ion-grid class=\"ion-no-padding ion-no-margin\">\n        <ion-row class=\"ion-no-padding ion-no-margin\">\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n\n            <!-- NOTIFY OF DIFFERENT LANGUAGE: -->\n\n            <small *ngIf=\"(!!p.language) && (p.language != G.S.language)\">\n              <p [innerHtml]=\"'poll.different-language' | translate: {language: G.S.language_names[p.language]}\"></p>\n            </small>\n\n            <!-- POLL TITLE -->\n\n            <h3><b><i [innerHtml]=\"p.title\"></i></b></h3>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n    <ion-item *ngIf=\"(p.desc||'')!='' || (p.url||'') != ''\"\n        color=\"primary\" class=\"ion-padding-left ion-padding-right\" \n        style=\"cursor: pointer; --min-height: 0!important;\"\n        (click)=\"details_expanded =! details_expanded\">\n      <ion-grid class=\"ion-no-padding ion-padding-bottom ion-no-margin\" style=\"width: 100%;\">\n        <ion-row class=\"ion-no-padding ion-no-margin\">\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n\n            <!-- POLL DESCRIPTION, \"READ MORE\" LINK -->\n\n            <div [style]=\"\n                details_expanded\n                ? 'white-space: normal; overflow: hidden; text-overflow: ellipsis; width: 100%!important;'\n                : 'white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%!important;'\n                \">\n              <i *ngIf=\"(p.desc||'')!=''\" [innerHtml]=\"p.desc\"></i><span *ngIf=\"(p.desc||'')!='' && (p.url||'') != ''\">&nbsp;</span>\n              <small *ngIf=\"(p.url||'') != ''\">\n                (<span (click)=\"G.open_url_in_new_tab(G.D.fix_url(p.url));details_expanded=!details_expanded\"><ion-text \n                  class=\"externallink\"  \n                  [innerHtml]=\"'read-more' | translate\">\n                </ion-text>&nbsp;<ion-icon name=\"open-outline\" style=\"position: relative; top: 2px;\"></ion-icon></span>)\n              </small>\n              <small *ngIf=\"details_expanded\">\n                &nbsp;\n                (<ion-text \n                  class=\"externallink\" \n                  [innerHtml]=\"'hide' | translate\">\n                </ion-text>)\n              </small>\n            </div>\n\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n    <ion-item color=\"primary\" class=\"ion-no-margin ion-padding-left ion-padding-right\" >\n      <ion-grid class=\"ion-no-padding ion-no-margin\">\n        <ion-row class=\"ion-no-padding ion-no-margin\">\n          <ion-col class=\"ion-no-padding ion-no-margin\" style=\"padding-bottom:8px; padding-top:2px;\">\n\n            <!-- ASSIST BUTTON: -->\n\n            <ion-button *ngIf=\"p.allow_voting\"\n                (click)=\"assist_dialog()\" \n                size=\"small\" fill=\"clear\" class=\"ion-float-right ion-no-padding ion-no-margin\"\n                style=\"position: relative; top: 5px; right: 10px; margin-left:20px; margin-bottom:5px!important;\">\n              <ion-label *ngIf=\"details_expanded\" style=\"color:#88e950; white-space: normal; text-align: right; font-size: 11.5px;\"\n                [innerHtml]=\"'poll.assist-me-button' | translate\">\n              </ion-label>&nbsp;<ion-button shape=\"round\" class=\"ion-no-padding ion-no-margin\" color=\"success\">\n                <ion-icon name=\"color-wand-outline\" slot=\"icon-only\" \n                  style=\"margin: 5px;\"></ion-icon>\n              </ion-button>\n            </ion-button>\n\n            <!-- CLOSING DATE, CLOSING SOON BADGE: -->\n\n            <small>\n              <span style=\"white-space: nowrap;\">\n                <ion-badge *ngIf=\"p.allow_voting && p.is_closing_soon\" \n                  class=\"ion-no-margin\" \n                  style=\"position: relative; bottom: -5.5px; font-size: 11.5px;\" \n                  color=\"danger\" \n                  [innerHtml]=\"'badges.closing-soon'|translate\">\n                </ion-badge>\n                <span *ngIf=\"p.allow_voting && !p.is_closing_soon\"\n                  [innerHtml]=\"'poll.closes' | translate\">\n                </span><span *ngIf=\"!p.allow_voting\"\n                  [innerHtml]=\"'poll.closed' | translate\">\n                </span>&nbsp;<b \n                  [innerHtml]=\"G.D.format_date(p.due)\">\n                </b>\n              </span><br/>\n              <span style=\"white-space: nowrap;\">\n                <ion-icon color=\"light\" style=\"position: relative; top: 2px\" [name]=\"(p.type=='share')?'cut-outline':'trophy-outline'\"></ion-icon>&nbsp;<span [innerHtml]=\"((p.type=='share')?'poll.type-share':'poll.type-winner')|translate\"></span>\n              </span>\n            </small>\n            <br/>\n\n            <!-- STATISTICS: -->\n\n            <small style=\"white-space: nowrap;\">\n              <span style=\"white-space: nowrap;\">\n                <ion-icon \n                    color=\"light\" style=\"position: relative; top: 2px\" \n                    name=\"people-outline\">\n                </ion-icon>&nbsp;<b>{{p.T.n_not_abstaining}}</b>&nbsp;<span class=\"externallink\" (click)=\"glossary('non-abstaining')\" [innerHtml]=\"'non-abstaining-voters'|translate\"></span>&nbsp;&nbsp;&nbsp;\n  <!--              <ion-button\n                    class=\"ion-no-padding ion-no-margin\" fill=\"clear\" size=\"small\" \n                    [routerLink]=\"'/inviteto/'+p.pid\" >\n                  <ion-icon \n                      class=\"ion-no-padding ion-no-margin\" \n                      style=\"font-size: 14px; position: relative; top: -1px\"\n                      name=\"share-social-outline\" \n                      color=\"light\">\n                  </ion-icon>\n                </ion-button>&nbsp;<span class=\"externallink\" [routerLink]=\"'/inviteto/'+p.pid\">Mehr einladen</span>-->\n                <br/>\n              </span>\n            </small>\n            <small style=\"white-space: nowrap;\">\n              <span style=\"white-space: nowrap;\">\n                <ion-icon \n                    color=\"light\" style=\"position: relative; top: 2px;\" \n                    [name]=\"p.agreement_level == 1 ? 'checkmark-done-outline' : 'analytics-outline'\">\n                </ion-icon><b>&nbsp;{{(p.agreement_level * 100).toFixed(1)}}</b>%&nbsp;<span \n                    class=\"externallink\" \n                    (click)=\"glossary('level-of-agreement')\" \n                    [innerHtml]=\"'level-of-agreement'|translate\"\n                  ></span>\n              </span>&nbsp;\n\n              <!-- SUGGESTIONS BUTTON (TODO: place somewhere else): -->\n\n              <ion-badge *ngIf=\"false\"\n                    class=\"ion-no-margin\" \n                    style=\"position: relative; bottom:-6px; font-size: 11.5px; padding-top:2px\" \n                    color=\"success\" \n                    >\n                <ion-icon name=\"bulb-outline\" class=\"ion-no-padding ion-no-margin\"\n                  style=\"position: relative; top: 1.5px;\"></ion-icon>&nbsp;<span [innerHtml]=\"'<b>3</b> suggestions'\"></span> \n              </ion-badge>\n\n              <!-- LIVE SCORES TOGGLE: -->\n\n              <ion-button [disabled]=\"!p.allow_voting\"\n                  (click)=\"toggle_show_live()\" \n                  size=\"small\" fill=\"clear\" class=\"ion-no-padding ion-no-margin\"\n                  style=\"position: absolute; right:8.5px; bottom:8px;\" \n                  >\n                <ng-container *ngIf=\"p.allow_voting\">\n                  <span style=\"color:#88e950; white-space: normal; text-align: right; font-size: 11.5px;\"\n                    [innerHtml]=\"'poll.show-live' | translate\">\n                  </span>&nbsp;<ion-button size=\"small\" shape=\"round\" color=\"success\" class=\"ion-no-border ion-no-padding\"><ion-icon slot=\"icon-only\" [name]=\"show_live?'eye-off-outline':'eye-outline'\" style=\"padding-left:4px;padding-right:5px\"></ion-icon></ion-button><!--<ion-toggle [checked]=\"show_live\" color=\"warning\" style=\"padding-left: 0px!important;\"></ion-toggle>-->\n                </ng-container>\n              </ion-button>\n\n            </small>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n\n    <!-- VOTE STATUS BANNER: -->\n\n    <ng-container *ngIf=\"p.allow_voting\">\n      <ion-item *ngIf=\"p.am_abstaining\" color=\"danger\">\n        <small>\n          <p>\n            <span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-abstaining-1'|translate\"></span>&nbsp;<wbr/>\n            <span [innerHtml]=\"'poll.hint-abstaining-2-before-wap'|translate\"></span><wbr/><span (click)=\"glossary('wap')\" style=\"cursor: pointer; white-space: nowrap\"><span class=\"externallink\" [innerHtml]=\"'poll.hint-abstaining-2-wap'|translate\"></span><ion-icon name=\"help-circle-outline\" style=\"font-size: 16px; position: relative; top:4px;\"></ion-icon></span><span [innerHtml]=\"'poll.hint-abstaining-2-after-wap'|translate\"></span>\n            <!-- assist link: -->\n            &nbsp;<wbr/><span style=\"white-space: nowrap;\">\n              (<a \n                (click)=\"assist_dialog()\"\n                [innerHtml]=\"'poll.assist-me-inline' | translate\">\n              </a>)\n            </span>\n          </p>\n        </small>\n      </ion-item>\n      <ion-item *ngIf=\"p.my_n_rated_positive == 1\" color=\"warning\">\n        <small>\n          <p>\n            <span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-only1positive-1-before-wap'|translate\"></span><wbr/><span (click)=\"glossary('wap')\" style=\"cursor: pointer; white-space: nowrap\"><span style=\"font-size: medium\" class=\"externallink\" [innerHtml]=\"'poll.hint-only1positive-1-wap'|translate\"></span><ion-icon name=\"help-circle-outline\" style=\"font-size: 16px; position: relative; top:3px;\"></ion-icon></span><span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-only1positive-1-after-wap'|translate\"></span>&nbsp;<wbr/>\n            <span [innerHtml]=\"'poll.hint-only1positive-2'|translate\"></span>\n            <!-- assist link: -->\n            &nbsp;<wbr/><span style=\"white-space: nowrap;\">\n              (<a \n                (click)=\"assist_dialog()\"\n                [innerHtml]=\"'poll.assist-me-inline' | translate\">\n              </a>)\n            </span>\n          </p>\n        </small>\n      </ion-item>\n      <ion-item *ngIf=\"show_live && p.my_n_rated_positive != 1 && p.my_n_approved == 1\" color=\"secondary\">\n        <small>\n          <p>\n            <span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-only1approved-1-before-approving'|translate\"></span><wbr/><span (click)=\"glossary('approve')\" style=\"cursor: pointer; white-space: nowrap\"><span style=\"font-size: medium\" class=\"externallink\" [innerHtml]=\"'poll.hint-only1approved-1-approving'|translate\"></span><ion-icon name=\"help-circle-outline\" style=\"font-size: 16px; position: relative; top:3px;\"></ion-icon></span><span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-only1approved-1-after-approving'|translate\"></span>&nbsp;<wbr/>\n            <span [innerHtml]=\"'poll.hint-only1approved-2-before-wap'|translate\"></span><wbr/><span (click)=\"glossary('wap')\" style=\"cursor: pointer; white-space: nowrap\"><span class=\"externallink\" [innerHtml]=\"'poll.hint-only1approved-2-wap'|translate\"></span><ion-icon name=\"help-circle-outline\" style=\"font-size: 16px; position: relative; top:4px;\"></ion-icon></span><span [innerHtml]=\"'poll.hint-only1approved-2-after-wap'|translate\"></span>\n            <!-- assist link: -->\n            &nbsp;<wbr/><span style=\"white-space: nowrap;\">\n              (<a \n                (click)=\"assist_dialog()\"\n                [innerHtml]=\"'poll.assist-me-inline' | translate\">\n              </a>)\n            </span>\n          </p>\n        </small>\n      </ion-item>\n      <ion-item *ngIf=\"show_live && p.my_n_approved > 1 && !p.T.approvals_map.get(oidsorted[0]).get(p.myvid)\" color=\"light\">\n        <small>\n          <p>\n            <span [innerHtml]=\"'poll.hint-mostapproved-1'|translate\"></span>\n          </p>\n        </small>\n      </ion-item>\n      \n    </ng-container>\n\n    <!-- FINAL RESULTS (if ended and results are ready): -->\n\n    <!-- winner exists: -->\n    <ng-container *ngIf=\"p.has_results && p.type=='winner'\">\n      <ion-item color=\"light\">\n        <p [innerHtml]=\"'poll.results'|translate\">\n        </p>\n      </ion-item>\n      <ion-item color=\"danger\">\n        <h3>\n          <b [innerHtml]=\"'poll.winner-is'|translate:{winner:p.options[p.winner].name}\"></b>\n        </h3>\n      </ion-item>\n      <ion-item color=\"warning\">\n        <p>\n          <b [innerHtml]=\"'poll.reason'|translate\"></b>&nbsp;\n          <span \n            *ngIf=\"p.T.n_not_abstaining == 0\" \n            [innerHtml]=\"'poll.reason-all-abstained'|translate:{}\"></span>\n          <span \n            *ngIf=\"p.T.n_not_abstaining > 0 && p.T.approval_scores_map.get(oidsorted[0]) == p.T.n_not_abstaining && p.T.approval_scores_map.get(oidsorted[1]) < p.T.n_not_abstaining\" \n            [innerHtml]=\"'poll.reason-full-consensus-unique'|translate:{}\"></span>\n          <span \n            *ngIf=\"p.T.n_not_abstaining > 0 && p.T.approval_scores_map.get(oidsorted[0]) == p.T.n_not_abstaining && p.T.approval_scores_map.get(oidsorted[1]) == p.T.n_not_abstaining\" \n            [innerHtml]=\"'poll.reason-full-consensus-highest'|translate:{}\"></span>\n          <span \n            *ngIf=\"p.T.n_not_abstaining > 0 && p.T.approval_scores_map.get(oidsorted[0]) < p.T.n_not_abstaining && p.winner == oidsorted[0]\" \n            [innerHtml]=\"'poll.reason-largest-approval'|translate:{\n              approval:(p.T.approval_scores_map.get(oidsorted[0])/p.T.n_not_abstaining*100).toFixed(1),\n              disapproval:(100-p.T.approval_scores_map.get(oidsorted[0])/p.T.n_not_abstaining*100).toFixed(1)}\"></span>\n          <span \n            *ngIf=\"p.T.n_not_abstaining > 0 && p.T.approval_scores_map.get(oidsorted[0]) < p.T.n_not_abstaining && p.winner != oidsorted[0]\" \n            [innerHtml]=\"'poll.reason-smaller-approval'|translate:{\n              share:(p.T.shares_map.get(p.winner)*100).toFixed(1)}\"></span>\n        </p>\n      </ion-item>\n    </ng-container>\n\n    <!-- shares exist: -->\n    <ng-container *ngIf=\"p.has_results && p.type=='share'\">\n      <ion-item color=\"light\">\n        <p [innerHtml]=\"'poll.results'|translate\">\n        </p>\n      </ion-item>\n      <ion-item color=\"danger\">\n        <ion-text>\n          <ng-container *ngFor=\"let item of [].constructor(oidsorted.length); let i = index\">\n            <ng-container *ngIf=\"p.T.shares_map.get(oidsorted[i]) > 0\">\n                <h3><b>\n                  <span [innerHtml]=\"'poll.of-the-budget-go-to'|translate:{share:(p.T.shares_map.get(oidsorted[i])*100).toFixed(1), option:p.options[oidsorted[i]].name}\"></span>\n                </b></h3> \n            </ng-container>\n          </ng-container>\n        </ion-text>   \n      </ion-item>\n    </ng-container>\n\n    <!-- results not ready yet: -->\n    <ng-container *ngIf=\"!p.allow_voting && !p.has_results\">\n      <ion-item color=\"warning\">\n        <p [innerHtml]=\"'poll.wait-for-results'|translate\">\n        </p>\n      </ion-item>\n    </ng-container>\n\n    <!-- FINAL WAPS EXPANDER (if ended): -->\n\n    <ion-item *ngIf=\"!p.allow_voting\" \n        color=\"light\"\n        (click)=\"final_expanded=!final_expanded\"\n        style=\"cursor: pointer;\">\n      <ion-icon \n        [name]=\"final_expanded?'caret-down-outline':'caret-forward-outline'\" \n        size=\"small\" color=\"primary\">\n      </ion-icon>&nbsp;&nbsp;<ion-label>\n        <span [innerHtml]=\"'poll.final-ratings'|translate\"></span>\n      </ion-label>\n    </ion-item>\n    \n    <!-- POTENTIALLY HIDDEN CONTENT: -->\n\n    <div [style.display]=\"p.allow_voting || final_expanded ? 'block' : 'none'\">\n\n      <!-- INCOMING DELEGATIONS BANNER: -->\n\n      <ion-item *ngIf=\"(accepted_requests.length > 0) || (declined_requests.length > 0)\"\n          color=\"light\">\n        <ion-grid class=\"ion-no-padding ion-no-margin\">\n\n          <!-- SUMMARY: -->\n\n          <ion-row \n              class=\"ion-no-padding ion-no-margin\" \n              style=\"padding-top: 5px; padding-bottom: 6px; cursor: pointer;\"\n              (click)=\"incoming_delegation_expanded =! incoming_delegation_expanded\">\n            <ion-col class=\"ion-no-margin ion-padding-right\" >\n              <small>\n                <ion-icon \n                  [name]=\"(incoming_delegation_expanded) ? 'chevron-down-outline' : 'chevron-forward-outline'\" \n                  size=\"smaller\" class=\"ion-no-margin\" \n                  style=\"color:black; position: relative; left: -2px; top: 2px;\">\n                </ion-icon>\n                <span *ngIf=\"accepted_requests.length > 0\" \n                  [innerHtml]=\"\n                    ((n_indirect_clients == 1 ? 'poll.also-for-other' : 'poll.also-for-others' )\n                    | translate: {n_others: n_indirect_clients})\n                    + ' '\n                  \">\n                </span>\n                <span *ngIf=\"declined_requests.length > 0\" \n                  [innerHtml]=\"(n_indirect_clients == 0 ? 'poll.declined-all' : 'poll.declined-some') | translate\">\n                </span>\n                &nbsp;\n              </small>\n            </ion-col>\n          </ion-row>\n\n          <!-- EXPANDABLE DETAILS: -->\n\n          <!-- Accepted requests: -->\n\n          <ion-row *ngIf=\"incoming_delegation_expanded && accepted_requests.length > 0\">\n            <ion-col class=\"ion-text-right\">\n              <small>\n                <span [innerHtml]=\"'poll.have-accepted' | translate\"></span>\n                <ion-chip *ngFor=\"let r of accepted_requests\" \n                    [routerLink]=\"r.url\" \n                    outline=\"true\">\n                  <ion-icon \n                    name=\"mail-open-outline\"\n                    style=\"color:grey\" size=\"small\">\n                  </ion-icon>\n                  <small>{{r.from}}</small>\n                </ion-chip>\n              </small>\n            </ion-col>\n          </ion-row>\n\n          <!-- Declined requests: -->\n\n          <ion-row *ngIf=\"incoming_delegation_expanded && declined_requests.length > 0\">\n            <ion-col class=\"ion-text-right\">\n              <small>\n                <span [innerHtml]=\"'poll.have-declined' | translate\"></span>\n                <ion-chip *ngFor=\"let r of declined_requests\" \n                    [routerLink]=\"r.url\" \n                    outline=\"true\">\n                  <ion-icon \n                    name=\"mail-open-outline\"\n                    style=\"color:grey\" size=\"small\">\n                  </ion-icon>\n                  <small>{{r.from}}</small>\n                </ion-chip>\n              </small>\n            </ion-col>\n          </ion-row>\n\n        </ion-grid>\n      </ion-item>\n\n      <!-- OUTGOING DELEGATION BANNER: -->\n\n      <ion-item *ngIf=\"delegation_status=='pending'\" \n          color=\"warning\"> \n        <ion-grid class=\"ion-no-padding ion-no-margin\">\n          <ion-row class=\"ion-no-padding ion-no-margin ion-align-items-center\">\n\n            <!-- Info about how many ratings the delegate controls: -->\n\n            <ion-col class=\"ion-no-margin ion-padding-right\">\n              <small>\n                <p>\n                  <span style=\"font-size: medium;\">{{delegate}}</span>&nbsp;\n                  <span [innerHtml]=\"\n                    'poll.delegate-not-responded' | translate\n                    \">\n                  </span>\n                </p>\n              </small>\n            </ion-col>\n\n            <!-- Revoke delegation button: -->\n\n            <ion-col size=\"auto\" class=\"ion-no-margin\">\n              <ion-button \n                  [disabled]=\"!p.allow_voting\"\n                  fill=\"clear\" (click)=\"revoke_delegation_dialog()\">\n                <ion-icon name=\"trash-outline\" style=\"color:black\"></ion-icon>\n              </ion-button>\n            </ion-col>\n\n          </ion-row>\n        </ion-grid>\n      </ion-item>\n\n      <ion-item *ngIf=\"delegation_status=='agreed'\" \n          color=\"warning\"> \n        <ion-grid class=\"ion-no-padding ion-no-margin\">\n          <ion-row class=\"ion-no-padding ion-no-margin ion-align-items-center\">\n\n            <!-- Info about how many ratings the delegate controls: -->\n\n            <ion-col class=\"ion-no-margin ion-padding-right\">\n              <small>\n                <p>\n                  <span style=\"font-size: medium;\">{{delegate}}</span>&nbsp;\n                  <span [innerHtml]=\"\n                    'poll.delegate-controls-' \n                    + (n_delegated == oidsorted.length ? 'all' \n                      : 2*n_delegated > oidsorted.length ? 'most' \n                      : n_delegated > 0 ? 'some' : 'none'\n                      ) | translate\n                    \">\n                  </span>\n                </p>\n              </small>\n            </ion-col>\n\n            <!-- Revoke delegation button: -->\n\n            <ion-col size=\"auto\" class=\"ion-no-margin\">\n              <ion-button fill=\"clear\" (click)=\"revoke_delegation_dialog()\">\n                <ion-icon name=\"trash-outline\" style=\"color:black\"></ion-icon>\n              </ion-button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            </ion-col>\n\n            <!-- Help text for delegation toggles: -->\n\n            <ion-col \n                size=\"auto\" \n                class=\"ion-no-padding ion-no-margin ion-padding-left ion-text-right\" \n                style=\"padding-bottom:3px;\">\n              <small>\n                <p>\n                  <span [innerHtml]=\"'poll.choose-whose-ratings' | translate\"></span>&nbsp;\n                  <ion-icon \n                    name=\"arrow-down-outline\" \n                    style=\"position:relative;top:3px;\">\n                  </ion-icon>\n                </p>\n              </small>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-item>\n\n      <!-- TABLE HEADER: -->\n\n      <ion-item class=\"ion-no-padding ion-no-margin\" lines=\"none\"\n            style=\"--min-height: 0px!important; font-weight: bold;\">\n        <small (click)=\"(show_live||!p.allow_voting)?glossary('share'):null\" style=\"padding-top: 8px!important;padding-left: 6px; width: 68px!important; color: #769596; text-align: center;\">\n          <span *ngIf=\"show_live||!p.allow_voting\" style=\"width: 100%!important\" class=\"externallink\" [innerHtml]=\"'share'|translate\"></span>\n        </small>\n        <small (click)=\"glossary('wap')\" style=\"padding-left: 6px!important; padding-top: 8px!important; flex-grow: 1; color: #769596;\"><!--#62a73b;-->\n          <span class=\"externallink\" [innerHtml]=\"'poll.your-wap'|translate\"></span><!-- &rarr;-->\n        </small>\n        <!-- TODO: make padding robustly correct accross devices: -->\n        <small (click)=\"(show_live||!p.allow_voting)?glossary('approve'):null\" [style]=\"'padding-top: 8px!important; padding-right: '+(delegation_status=='agreed'?62:10)+'px; color: #769596;'\"><!--#9abcbd--><!--&larr; -->\n          <ng-container *ngIf=\"show_live||!p.allow_voting\">\n            <ion-icon name=\"caret-down\" style=\"position: relative; top: 2px;\"></ion-icon>&nbsp;<span class=\"externallink\" [innerHtml]=\"'approval'|translate\"></span>\n          </ng-container>\n        </small>\n      </ion-item>\n\n      <!-- OPTIONS: -->\n\n      <ion-item *ngFor=\"let item of [].constructor(oidsorted.length); let i = index\" style=\"align-items:flex-start\">\n\n        <!-- ALWAYS VISIBLE STUFF: -->\n\n        <ion-grid class=\"ion-no-padding ion-no-margin\">\n\n          <ion-row class=\"ion-no-padding ion-no-margin\">\n\n            <!-- PIE CHART WITH WINNING PROBABILITY: -->\n\n            <ion-col size=\"auto\" class=\"ion-no-padding ion-no-margin\">\n              <div style=\"width: 60px!important\"></div>\n              <svg [attr.display]=\"(show_live||!p.allow_voting)?'inline':'none'\" xmlns=\"http://www.w3.org/2000/svg\" width=\"60px\" height=\"60px\" style=\"position:absolute; bottom:0px;\"><!--top:12px;-->\n                <circle cx=\"21\" cy=\"25\" r=\"20\" fill=\"#bce4e5\" stroke=\"none\" />\n                <path [id]=\"'pie_'+oidsorted[i]\" d=\"M 21,25 l 0,-20 a 20 20 0 0 1 0 0 Z\" fill=\"#9abcbd\" />\n                <line [attr.display]=\"option_expanded[oidsorted[i]] ? 'inline' : 'none'\"\n                  x1=\"21\" y1=\"48\" x2=\"21\" y2=\"60\" stroke=\"#769596\" stroke-width=\"1\" stroke-dasharray=\"1 1\"></line>\n              </svg>\n            </ion-col>\n\n            <ion-col>\n\n              <ion-grid class=\"ion-no-padding ion-no-margin\">\n\n                <ion-row class=\"ion-no-padding ion-no-margin\" style=\"padding-top: 8px; cursor: pointer; position: relative; left: -6px; z-index:20; \"\n                    (click)=\"expand(oidsorted[i])\">\n                  <ion-col class=\"ion-no-padding ion-no-margin\">\n\n                    <ion-input style=\"display: none;\"></ion-input><!--this is needed so that the following ion-label is not greyed out when the ion-range below is disabled!-->\n                    <ion-label class=\"ion-no-padding ion-no-margin\" style=\"max-width: 100%!important;\">\n    \n                      <ion-icon \n                        [name]=\"(option_expanded[oidsorted[i]]) ? 'chevron-down-outline' : 'chevron-forward-outline'\" \n                        size=\"small\" class=\"ion-no-margin\" \n                        style=\"color:black; position: relative; top: 3px;\">\n                      </ion-icon>\n\n                      <!-- OPTION NAME: -->\n    \n                      <b><i>&nbsp;<span [innerHtml]=\"p.options[oidsorted[i]].name\"></span>&nbsp;</i></b>\n                    </ion-label>\n    \n                  </ion-col>\n                </ion-row>\n\n                <!-- RATING CONTROLS: -->\n\n                <ion-row class=\"ion-no-padding ion-no-margin\">\n\n                  <ion-col \n                      [id]=\"'_slider_'+oidsorted[i]+'_'+sortingcounter\"\n                      class=\"ion-no-padding ion-no-margin\" \n                      (click)=\"onRatingColClick(oidsorted[i], $event)\" \n                      (pointerdown)=\"onRatingColPointerdown(oidsorted[i], $event)\" \n                      (touchstart)=\"onRatingColTouchstart(oidsorted[i], $event)\" \n                      (touchup)=\"onRatingColTouchup(oidsorted[i], $event)\"\n                      (pointerup)=\"onRatingColPointerup(oidsorted[i], $event)\"\n                      >\n\n                    <!-- SLIDER: -->\n\n                    <!-- TODO: sometimes looks strange in Chrome (white shadowed large knob, bar displaced too low)-->\n                    <ion-range \n                        [disabled]=\"!p.allow_voting\"\n                        [id]=\"'slider_'+oidsorted[i]+'_'+sortingcounter\" \n                        [color]=\"show_live?slidercolor[oidsorted[i]]:'vodleblue'\"\n                        [value]=\"p.get_my_proxy_rating(oidsorted[i])\" \n                        (ionFocus)=\"onRatingSliderFocus(oidsorted[i])\" \n                        (ionChange)=\"onRatingSliderChange(oidsorted[i])\" \n                        (ionBlur)=\"onRatingSliderBlur(oidsorted[i])\"\n                        mode=\"md\" pin=\"true\" pinFormatter=\"(v)=>100-v\"\n                        min=\"0\" max=\"100\" step=\"1\" snaps=\"true\" ticks=\"false\"\n                        [style]=\"''\n                          + (rate_yourself_toggle[oidsorted[i]] || delegation_status!='agreed'\n                          ? 'pointer-events:; --bar-height: 7px; --knob-size: 35px'\n                          : 'pointer-events: none; --bar-height: 5px; --knob-size: 17px')\" \n                        class=\"ion-no-padding ion-no-margin\">\n\n                      <ion-label \n                          slot=\"end\" \n                          class=\"ion-no-padding ion-no-margin\" \n                          style=\"margin-right:12px;\">\n                          <!--don't do width:100% in ion-label since otherwise the slider is not working properly!-->\n\n                        <!-- APPROVAL BAR: -->\n\n                        <div style=\"position: absolute; bottom: 0px; right: 11px; z-index: -10; width: 100%; padding-left: 11px\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"35px\">\n                            <rect [id]=\"'bar_' + oidsorted[i]\"\n                              [attr.display]=\"(show_live||!p.allow_voting)?'inline':'none'\" \n                              x=\"100%\" width=\"0%\" y=\"8\" height=\"18\" \n                              fill=\"#bce4e5\" stroke=\"none\" /><!--Note: width will change dynamically-->\n                            <line [attr.display]=\"(show_live||!p.allow_voting)?'inline':'none'\" \n                              x1=\"100%\" y1=\"0\" x2=\"100%\" y2=\"34\" fill=\"none\" stroke=\"#bce4e5\" stroke-width=\"5\" \n                              />\n                            <line x1=\"0%\" x2=\"100%\" y1=\"17\" y2=\"17\" stroke=\"#b4dbdb\" stroke-width=\"2\" stroke-dasharray=\"2 2\" />\n                            <!--<rect x=\"0%\" width=\"100%\" y=\"16\" height=\"2\" fill=\"#b4dbdb\" stroke=\"none\" />-->\n                          </svg>\n                        </div>\n\n                        <!-- Numerical annotations when expanded: -->\n\n                        <div style=\"position: absolute; bottom: 0px; right: 11px; z-index: 10; width: 100%; padding-left: 11px; pointer-events: none;\">\n                          <svg [attr.display]=\"((show_live||!p.allow_voting) && option_expanded[oidsorted[i]]) ? 'inline' : 'none'\" \n                              xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"45px\">\n                            <!--\n                            <text x=\"0%\" y=\"20\" \n                              style=\"font-weight: bold; font-size: 12px;\" fill=\"slidercolor[oidsorted[i]]\" \n                              [innerHtml]=\"p.get_my_proxy_rating(oidsorted[i])\">\n                            </text>\n                            -->\n                            <text x=\"100%\" y=\"15\" \n                              style=\"font-weight: bold; font-size: 12px;\" text-anchor=\"end\" fill=\"#9abcbd\" [innerHtml]=\"\n                                (p.T.approval_scores_map.get(oidsorted[i]) / Math.max(1, p.T.n_not_abstaining) * 100).toFixed(1) + '%&nbsp;&nbsp;'\n                              \">\n                            </text>\n                          </svg>\n                        </div>\n\n                        <!-- DELEGATE'S RATING -->\n\n                        <div style=\"position: absolute; top: -2px; right: 11px; z-index: -5; width: 100%; padding-left: 11px\"\n                            [style.display]=\"delegation_status=='agreed' && rate_yourself_toggle[oidsorted[i]] ? 'inline' : 'none'\">\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"15px\">\n                            <line [id]=\"'del_needle_' + oidsorted[i]\" x1=\"0\" y1=\"8\" x2=\"50%\" y2=\"8\" fill=\"none\" stroke=\"#9abcbd\" stroke-width=\"2\" stroke-dasharray=\"3 2\" />\n                            <circle [id]=\"'del_knob_' + oidsorted[i]\" cx=\"50%\" cy=\"8\" r=\"5\" fill=\"#9abcbd\" stroke=\"none\"/>\n                            <!--FIXME: circle is cropped when close to either endpoint. how to avoid this?-->\n                          </svg>\n                        </div>\n\n                      </ion-label>\n                    </ion-range>\n                  </ion-col>\n\n                  <!-- DELEGATION TOGGLE: -->\n\n                  <ion-col *ngIf=\"delegation_status=='agreed'\" \n                      class=\"ion-no-margin ion-no-padding\" \n                      size=\"auto\">&nbsp;&nbsp;&nbsp;\n                    <ion-toggle [id]=\"'rate_yourself_toggle_' + oidsorted[i]\" \n                      [disabled]=\"!p.allow_voting\"\n                      (ionChange)=\"on_rate_yourself_toggle_change(oidsorted[i])\"\n                      class=\"ion-no-margin ion-no-padding ion-padding-bottom ion-padding-top\" \n                      style=\"position:relative; top:-8px;\" \n                      [(ngModel)]=\"rate_yourself_toggle[oidsorted[i]]\">\n                    </ion-toggle>\n                    <div style=\"position:absolute; z-index:10; top:22px; right:1px; text-align:right;\">\n                      <small [innerHtml]=\"\n                        rate_yourself_toggle[oidsorted[i]] \n                        ? ('poll.my-own' | translate) \n                        : ('poll.delegate-s' | translate: {delegate: delegate})\n                        \" >\n                      </small>\n                    </div>\n                  </ion-col>  \n                </ion-row>\n              </ion-grid>\n            </ion-col>\n          </ion-row>\n          <ion-row class=\"ion-no-padding ion-no-margin\">\n            <ion-col class=\"ion-no-padding ion-no-margin\">\n              <ion-grid class=\"ion-no-padding ion-no-margin\">\n\n                <!-- EXPANDABLE OPTION DETAILS -->\n\n                <!-- TODO: replace by simpler container: -->\n                <app-expandable [id]=\"'expander_'+oidsorted[i]+'_'+sortingcounter\" \n                    [expanded]=\"option_expanded[oidsorted[i]]\">\n                  <ion-row class=\"ion-no-padding ion-padding-bottom ion-no-margin\">\n                    <ion-col class=\"ion-no-padding ion-no-margin\">\n\n                      <!-- Live results: -->\n\n                      <b [style.display]=\"(show_live||!p.allow_voting)?'inline':'none'\">\n                        <!-- Winning chance/budget share: -->\n                        <span style=\"color:#769596;\">\n                          <span style=\"white-space: nowrap;\" [innerHtml]=\"\n                            (p.type == 'winner' \n                                ? (p.allow_voting?'poll.chance-to-win':'poll.final-chance-to-win') \n                                : (p.allow_voting?'poll.of-the-budget':'poll.final-budget')) \n                            | translate: {percentage: \n                              (p.T.shares_map.get(oidsorted[i]) * 100).toFixed(1)\n                            }\">\n                          </span><small><wbr> <span style=\"color:#4c822e;\" \n                              [style.display]=\"(votedfor == oidsorted[i]) ? 'inline' : 'none'\"\n                              [innerHtml]=\"'poll.including-your-share' | translate\">\n                            </span>,\n                          </small>\n                        </span><small><wbr> </small>\n                        <!-- Approval: -->\n                        <span style=\"color:#9abcbd; white-space: nowrap;\">\n                          <span [innerHtml]=\"\n                            'poll.approved-by' | translate: {percentage:\n                              (p.T.approval_scores_map.get(oidsorted[i]) / Math.max(1, p.T.n_not_abstaining) * 100).toFixed(1)\n                            }\">\n                          </span>\n                        </span>\n                        <small>\n                          <span style=\"color:#62a73b\" \n                            [style.display]=\"approved[oidsorted[i]] ? 'inline' : 'none'\"\n                            [innerHtml]=\"'poll.including-you' | translate\">\n                          </span>\n                        </small>\n                        <small>\n                          <!-- avg. rating: -->\n                          <span *ngIf=\"(i>0 \n                                    && p.T.approval_scores_map.get(oidsorted[i-1]) \n                                    == p.T.approval_scores_map.get(oidsorted[i])) \n                                || (i<oidsorted.length-1 \n                                    && p.T.approval_scores_map.get(oidsorted[i+1]) \n                                    == p.T.approval_scores_map.get(oidsorted[i]))\" \n                                style=\"color:#9abcbd\">,\n                            <span style=\"white-space: nowrap;\" [innerHtml]=\"\n                              'poll.average-rating' | translate: {average:\n                                (p.T.total_effective_ratings_map.get(oidsorted[i]) / Math.max(1, p.T.n_not_abstaining)).toFixed(1)\n                              }\">\n                            </span>\n                          </span>&nbsp;\n                          <!-- explanation link: -->\n                          <span style=\"color:#9abcbd; white-space: nowrap;\">\n                            (<a \n                              (click)=\"explain_approval_dialog(oidsorted[i])\"\n                              [innerHtml]=\"'poll.explain' | translate\">\n                            </a>)\n                          </span>\n                        </small>\n                      </b>\n\n                      <!-- Description: -->\n                      \n                      <span [style.display]=\"((show_live||!p.allow_voting) && (!!p.options[oidsorted[i]].desc || !!p.options[oidsorted[i]].url)) ? 'inline' : 'none'\">\n                        <br/>\n                      </span>\n                      <span [style.display]=\"p.options[oidsorted[i]].desc != '' ? 'inline' : 'none'\">\n                        <i><span [innerHtml]=\"p.options[oidsorted[i]].desc\"></span>&nbsp;&nbsp;</i>\n                      </span>\n                      <span [style.display]=\"p.options[oidsorted[i]].url != '' ? 'inline' : 'none'\">\n                        <small>\n                          (<span (click)=\"G.open_url_in_new_tab(G.D.fix_url(p.options[oidsorted[i]].url))\"><ion-text \n                              class=\"externallink\"  \n                              [innerHtml]=\"'read-more' | translate\">\n                          </ion-text>&nbsp;<ion-icon name=\"open-outline\" style=\"position: relative; top: 2px;\"></ion-icon></span>)\n                        </small>\n                      </span>\n\n                      <!-- debugging info: - ->\n\n                      <small>\n                        <br/>direct_delegation_map: {{G.map2str(p.direct_delegation_map.get(oidsorted[i]))}}\n                        <br/>inv_direct_delegation_map: {{G.map2str(p.inv_direct_delegation_map.get(oidsorted[i]))}}\n                        <br/>indirect_delegation_map: {{G.map2str(p.indirect_delegation_map.get(oidsorted[i]))}}\n                        <br/>inv_indirect_delegation_map: {{G.map2str(p.inv_indirect_delegation_map.get(oidsorted[i]))}}\n                        <br/>effective_delegation_map: {{G.map2str(p.effective_delegation_map.get(oidsorted[i]))}}\n                        <br/>inv_effective_delegation_map: {{G.map2str(p.inv_effective_delegation_map.get(oidsorted[i]))}}\n                        <br/>ratings_ascending_map: {{G.map2str(p.T.ratings_ascending_map)}}\n                        <br/>thresholds_map: {{G.map2str(p.T.thresholds_map)}}\n                        <br/>approval_scores_map: {{G.map2str(p.T.approval_scores_map)}}\n                        <br/>total_effective_ratings_map: {{G.map2str(p.T.total_effective_ratings_map)}}\n                        <br/>votes_map: {{G.map2str(p.T.votes_map)}}\n                        <br/>n_votes_map: {{G.map2str(p.T.n_votes_map)}}\n                        <br/>shares_map: {{G.map2str(p.T.shares_map)}}\n                      </small>\n                      <!---->\n                      \n                    </ion-col>\n                  </ion-row>\n                </app-expandable>\n              </ion-grid>\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n\n      </ion-item>\n\n      <!-- ADD OPTION BUTTON: -->\n\n      <ng-container *ngIf=\"p.allow_voting\">\n        <ion-item lines=\"none\" class=\"ion-no-padding\" style=\"padding-left: 10px; padding-top: 10px;\">\n          <ion-fab-button \n            size=\"small\" (click)=\"add_option($event)\" fill=\"clear\" color=\"primary\">\n            <ion-icon name=\"add\"></ion-icon>\n          </ion-fab-button>\n          <ion-button \n            class=\"ion-no-padding ion-no-margin\" fill=\"clear\" (click)=\"add_option($event)\"\n            [innerHtml]=\"'poll.add-option' | translate\"> \n          </ion-button>\n        </ion-item>\n        <ion-item lines=\"none\" style=\"padding-bottom: 10px!important;\">\n          <small [innerHtml]=\"'poll.add-option-info' | translate\"></small>\n        </ion-item>\n      </ng-container>\n\n    </div>\n\n    <!-- DEBUGGING AREA (not in production mode): -->\n\n    <ng-container *ngIf=\"false && !E.production\">\n      <ion-item></ion-item>\n      <ion-item class=\"ion-text-right\" lines=\"none\">\n        <ion-col><small><p style=\"color: grey;\">\n          Debugging info: state={{p.state}}, vid={{p.myvid}}, oids={{p.oids}}, oidsorted={{oidsorted}}/{{p.T.oids_descending}}, scores_map={{G.map2str(p.T.scores_map)}}. \n          Simulate state (off:closed, on:running): \n        </p></small></ion-col>\n        <ion-buttons slot=\"end\">\n          <!-- only in debug: simulate closing -->\n          <ion-toggle color=\"light\"\n            [(ngModel)]=\"p.allow_voting\">\n          </ion-toggle>\n        </ion-buttons>\n      </ion-item>\n    </ng-container>\n\n  </ion-list>\n</ion-content>\n\n<!-- OPTIONAL GLOSSARY: -->\n\n<ion-footer *ngIf=\"show_glossary\" style=\"box-shadow: 0px -3px 4px #eeeeee;\">\n  <ion-item color=\"light\">\n    <ion-text>\n    <ion-button (click)=\"dismiss_glossary()\" fill=\"clear\" class=\"ion-float-right ion-margin-right ion-margin-left ion-no-padding\"\n        style=\"position: relative; right: -6px; top: 3px;\">\n      <ion-icon class=\"ion-no-margin ion-no-padding\" slot=\"icon-only\" name=\"close\" color=\"primary\"></ion-icon>\n    </ion-button>\n    <small [innerHtml]=\"'glossary.'+glossary_key|translate\"></small>\n  </ion-text>\n  </ion-item>\n</ion-footer>\n\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoadingController, IonContent, IonRouterOutlet, PopoverController, AlertController, ModalController } from '@ionic/angular'; \n\nimport { environment } from '../../environments/environment';\nimport { GlobalService } from \"../global.service\";\nimport { Poll } from '../poll.service';\nimport { news_t } from '../data.service';\n\nimport { DelegationDialogPage } from '../delegation-dialog/delegation-dialog.module';  \nimport { AssistPage } from '../assist/assist.module';  \nimport { AddoptionDialogPage } from '../addoption-dialog/addoption-dialog.module';  \nimport { ExplainApprovalPage } from '../explain-approval/explain-approval.module';  \n\n@Component({\n  selector: 'app-poll',\n  templateUrl: './poll.page.html',\n  styleUrls: ['./poll.page.scss'],\n})\nexport class PollPage implements OnInit {\n\n  Array = Array;\n  Math = Math;\n  Object = Object;\n  window = window;\n  E = environment;\n\n  @ViewChild(IonContent, { static: false }) content: IonContent;\n\n  page = \"poll\";\n\n  pid: string;\n  p: Poll;\n\n  delegate: string;\n  delegation_status = \"none\";\n\n  n_indirect_clients = 1;\n  accepted_requests = [];\n  declined_requests = [];\n\n  oidsorted: string[] = [];\n  sortingcounter: number = 0;\n\n  approved = {}; // whether option is approved by me\n  votedfor = null; // oid my prob. share goes to\n\n  // gui layout choices by user:\n  show_live = false;\n  final_expanded = false;\n  details_expanded = true;\n  incoming_delegation_expanded = false;\n  option_expanded = {};\n\n  // other:\n\n  pieradius = 20;\n  two_pi = 2*Math.PI; \n  slidercolor = {};\n\n  refresh_paused = false;\n  needs_refresh = false;\n\n  scroll_position = 0;\n  rate_yourself_toggle: Record<string, boolean> = {};\n  n_delegated = 0;\n\n  news: Set<news_t> = new Set();\n\n  // LIFECYCLE:\n\n  ready = false;  \n\n  constructor(\n      private changeDetector: ChangeDetectorRef,\n      private router: Router,\n      private route: ActivatedRoute,\n      private routerOutlet: IonRouterOutlet,\n      public loadingController: LoadingController,\n      public alertCtrl: AlertController,\n      private popover: PopoverController,\n      private modalController: ModalController,\n      public translate: TranslateService,\n      public G: GlobalService) {\n    this.G.L.entry(\"PollsPage.constructor\");\n    // get pid of opened poll:\n    this.route.params.subscribe( params => { \n      this.pid = params['pid'];\n    } );\n  }\n\n  ngOnInit() {\n    this.G.L.entry(\"PollsPage.ngOnInit\");\n  }\n\n  ionViewWillEnter() {\n    this.G.L.entry(\"PollPage.ionViewWillEnter\");\n    this.G.D.page = this;\n    const f = (ev => { this.changeDetector.detectChanges(); });\n    window.addEventListener('offline', f);\n    window.addEventListener('online', f);\n    // get gui state:\n    const specs = JSON.parse(this.G.D.getp(this.pid, \"poll_page\") || \"{}\");\n    this.show_live = (specs['show_live'] == true);\n    this.details_expanded = (specs['details_expanded'] != false);\n    this.incoming_delegation_expanded = (specs['incoming_delegation_expanded'] == true);\n    this.option_expanded = specs['option_expanded'] || {};\n    this.G.L.exit(\"PollPage.ionViewWillEnter\", specs);\n  }\n\n  ionViewDidEnter() {\n    this.G.L.entry(\"PollPage.ionViewDidEnter\");\n    if (this.G.D.ready) {\n      this.onDataReady();\n    }\n    this.G.L.debug(\"PollPage.ready:\", this.ready);\n  }\n\n  onDataReady() {\n    // called when DataService initialization was slower than view initialization\n    this.G.L.entry(\"PollPage.onDataReady\");\n    if (this.pid in this.G.P.polls) {\n      this.p = this.G.P.polls[this.pid];\n      if (this.p.state == 'draft') {\n        this.G.L.error(\"PollPage not showing draft poll, redirecting to mypolls page\", this.pid);\n        this.router.navigate([\"/mypolls\"]);\n      } else {\n        this.G.L.info(\"PollPage showing poll\", this.pid);\n      }\n      // TODO: check if running or closed!\n    } else {\n      this.G.L.warn(\"PollPage unknown pid ignored, redirecting to mypolls page\", this.pid, this.G.P.polls);\n      this.router.navigate([\"/mypolls\"]);\n      return;\n    }\n    this.p.tally_all();\n    // TODO: optimize sorting performance:\n    this.oidsorted = [...this.p.T.oids_descending]; \n    this.ready = true;\n    this.update_order(true);\n    /*\n    for (let oid of this.oidsorted) {\n      this.option_expanded[oid] = false;\n    }\n    */\n    window.setTimeout(() => {\n      this.update_order.bind(this)(true);\n      this.show_stats.bind(this)();\n    }, 200);\n    this.update_delegation_info();\n    this.on_delegate_toggle_change();\n    this.p.have_seen = true;\n    if (this.p.has_results) {\n      this.p.have_seen_results = true;\n    }\n    this.G.L.exit(\"PollPage.onDataReady\");\n  }\n\n  onDataChange() {\n    this.G.L.entry(\"PollPage.onDataChange\");\n    this.p.tally_all();\n    this.update_order();\n    this.update_delegation_info();\n    this.news = this.G.N.filter({pid: this.pid});\n    this.changeDetector.detectChanges();\n    this.G.L.exit(\"PollPage.onDataChange\");\n  }\n\n  ionViewWillLeave() {\n    // make sure current slider values are really stored in database:\n    for (let oid of this.oidsorted) {\n      if (!this.delegate || this.rate_yourself_toggle[oid]) {\n        this.p.set_my_own_rating(oid, Math.round(this.get_slider_value(oid)), true);\n      }\n    }\n    // dismiss auto-dismissing news:\n    for (const news of this.news) {\n      if (news.auto_dismiss) {\n        this.G.N.dismiss(news.key);\n      }\n    }\n    // store gui state:\n    const specs = {\n      'show_live': this.show_live,\n      'details_expanded': this.details_expanded,\n      'incoming_delegation_expanded': this.incoming_delegation_expanded,\n      'option_expanded': this.option_expanded\n    }\n    this.G.D.setp(this.pid, \"poll_page\", JSON.stringify(specs));\n    this.G.L.exit(\"PollPage.ionViewWillLeave\", specs);\n  }\n\n  ionViewDidLeave() {\n    this.G.L.entry(\"PollPage.ionViewDidLeave\");\n    this.G.D.save_state();\n    this.G.L.exit(\"PollPage.ionViewDidLeave\");\n  }\n\n  update_delegation_info() {\n    // determine own weight:\n    this.n_indirect_clients = this.p.get_n_indirect_clients(this.p.myvid);\n    // find incoming delegations:\n    const cache = this.G.D.incoming_dids_caches[this.pid];\n    this.accepted_requests = [];\n    this.declined_requests = [];\n    if (cache) {\n      for (const [did, [from, url, status]] of cache) {\n        if (status == 'agreed') {\n          this.accepted_requests.push({from:from, url:url});\n        } else if (status.startsWith('declined')) {\n          this.declined_requests.push({from:from, url:url});\n        } \n      }\n    }\n    // find outgoing delegation:\n    const did = this.G.Del.get_my_outgoing_dids_cache(this.pid).get(\"*\");\n    this.G.L.trace(\"PollPage.update_delegation_info did\", did);\n    if (did) {\n      this.delegate = this.G.Del.get_delegate_nickname(this.pid, did);\n      const agreement = this.G.Del.get_agreement(this.pid, did);\n      this.G.L.trace(\"PollPage.update_delegation_info agreement\", agreement);\n      this.delegation_status = agreement.status;\n    }\n    this.update_delegation_toggles();\n  }\n\n  update_delegation_toggles() {\n    for (let oid of this.oidsorted) {\n      let did = this.G.Del.get_my_outgoing_dids_cache(this.pid).get(oid);\n      if (!did) {\n        did = this.G.Del.get_my_outgoing_dids_cache(this.pid).get(\"*\");\n      }\n      if (did) {\n        const a = this.G.Del.get_agreement(this.pid, did);\n        this.G.L.trace(\"PollPage found did, agreement\", oid, did, a, [...a.accepted_oids], [...a.active_oids]);\n        this.rate_yourself_toggle[oid] = !a.active_oids.has(oid);\n      } else {\n        this.G.L.trace(\"PollPage found no did for\", oid);\n        this.rate_yourself_toggle[oid] = true;\n      }\n    }\n  }\n\n  async onScroll(ev) {\n    /** find scroll position to be able to react to it */ \n    // TODO: make sure the page does not scroll away under a \"held\" slider?\n    // if so, this.scroll_position needs to be used somehow to adjust the window's actual scroll position in that case...\n    /*\n    const elem = this.content;\n  \n    // the ion content has its own associated scrollElement\n    const scrollElement = await ( elem as any).getScrollElement();\n  \n    const totalContentHeight = scrollElement.scrollHeight;\n    const viewportHeight = scrollElement.offsetHeight;\n    const scrollPosition = ev.detail.scrollTop;\n    this.scroll_position = scrollPosition / (totalContentHeight - viewportHeight);\n    */\n    this.scroll_position = ev.detail.scrollTop;      \n  }\n\n  on_rate_yourself_toggle_change(oid:string) {\n//    const new_rating = this.p.own_ratings_map.get(oid).get(this.p.myvid);\n    // update delegation data:\n    this.G.Del.update_my_delegation(this.pid, oid, !this.rate_yourself_toggle[oid]);\n    // update slider value:\n//    this.get_slider(oid).value = new_rating.toString();\n    this.on_delegate_toggle_change();\n  }\n\n  on_delegate_toggle_change() {\n    // update n_delegated: // TODO: make more efficient\n    let sum = 0;\n    for (let [oid, b] of Object.entries(this.rate_yourself_toggle)) {\n      if (!b) sum++;\n    }\n    this.n_delegated = sum;\n  }\n\n  show_stats() { \n    /** update pies and bars, but not order! */\n    if (!this.ready) {\n      return\n    }\n    this.G.L.entry(\"PollPage.show_stats\");\n    const p = this.p, T = p.T, myvid = p.myvid, \n          approval_scores_map = T.approval_scores_map,\n          shares_map = T.shares_map, approvals_map = T.approvals_map;\n    this.votedfor = T.votes_map.get(this.p.myvid);\n    for (const oid of p.oids) {\n      // FIXME: bar and pie are sometimes null here, but not when running the getElementById in the console. why?\n      const a = (approval_scores_map.get(oid) / T.n_not_abstaining) || 0,\n            share = shares_map.get(oid),\n            bar = <SVGRectElement><unknown>document.getElementById('bar_'+oid),\n            pie = <SVGPathElement><unknown>document.getElementById('pie_'+oid),\n            R = this.pieradius,\n            dx = R * Math.sin(this.two_pi * share),\n            dy = R * (1 - Math.cos(this.two_pi * share)),\n            more_than_180_degrees_flag = share > 0.5 ? 1 : 0; \n      this.approved[oid] = approvals_map.get(oid).get(myvid);\n      if (bar) {\n        bar.width.baseVal.valueAsString = (100 * a).toString() + '%';\n        bar.x.baseVal.valueAsString = (100 * (1 - a)).toString() + '%';\n      } else {\n        this.G.L.warn(\"PollPage.show_stats couldn't change slider bar\", oid);\n      }\n      if (pie) {\n        if (share < 1) {\n          pie.setAttribute('d', \"M 21,25 l 0,-\"+R+\" a \"+R+\" \"+R+\" 0 \"+more_than_180_degrees_flag+\" 1 \"+dx+\" \"+dy+\" Z\");\n        } else { // a full circle\n          pie.setAttribute('d', \"M 21,25 l 0,-20 a 20 20 0 1 1 0 \"+(2*R)+\" a 20 20 0 1 1 0 \"+(-2*R)+\" Z\");\n        }\n      } else {\n        this.G.L.warn(\"PollPage.show_stats couldn't change pie piece\", oid);\n      }\n      this.set_slider_color(oid, p.get_my_proxy_rating(oid));\n      if (this.rate_yourself_toggle[oid]) {\n        // update dashed needle showing delegate's rating\n        const needle = <SVGLineElement><unknown>document.getElementById('del_needle_'+oid),\n              knob = <SVGCircleElement><unknown>document.getElementById('del_knob_'+oid),\n              delegate_vid = this.G.Del.get_potential_effective_delegate(this.pid, oid);\n//        this.G.L.trace(\"PollPage.show_stats needle know delegate_vid\", needle, knob, delegate_vid);\n        if (delegate_vid) {\n          const rating = (this.p.proxy_ratings_map.get(oid)||new Map()).get(delegate_vid)||0;\n          this.G.L.trace(\"PollPage.show_stats rating\", rating);\n          if (needle) {\n            needle.x2.baseVal.valueAsString = (rating).toString() + '%';\n          }\n          if (knob) {\n            knob.cx.baseVal.valueAsString = (rating).toString() + '%';\n          }    \n        }\n      }\n    }\n  }\n\n  listeners: Map<any, any[]> = new Map(); // cache for event listeners used in update_order\n  final_rand: number = 0;\n\n  async update_order(force=false) {\n    // TODO: rather have this triggered by tally function!\n    if (this.oidsorted.length != this.p.oids.length) {\n      this.needs_refresh = true;\n    } else {\n      for (let i in this.oidsorted) { // loops over the indices\n        if (this.oidsorted[i] != this.p.T.oids_descending[i]) {\n  //        this.G.L.trace(\"PollPage.update_order\", this.oidsorted[i], this.p.T.oids_descending[i]);\n          this.needs_refresh = true;\n          break;\n        }\n      }  \n    }\n    if (force || (this.show_live && this.needs_refresh && !(this.refresh_paused) && !this.dragged_oid)) {\n      if (!force) {\n        const loadingElement = await this.loadingController.create({\n          message: this.translate.instant('poll.sorting'),\n          spinner: 'crescent',\n          duration: 100\n        });\n        await loadingElement.present();\n        await loadingElement.onDidDismiss();\n      }\n      // now actually tell html to use the new ordering:\n      this.oidsorted = [...this.p.T.oids_descending];\n      this.sortingcounter++;\n      this.needs_refresh = false;\n      setTimeout(()=>{\n        this.show_stats.bind(this)();\n        // add event listeners to catch events outside knob also on Android:\n        for (let i in this.oidsorted) {\n          const oid = this.oidsorted[i],\n                col = document.getElementById('_slider_'+this.oidsorted[i]+\"_\"+this.sortingcounter),\n                // new event listeners:\n                l1 = (ev => { this.onRatingColPointerdown.bind(this)(oid, ev) }),\n                l2 = (ev => { this.onRatingColPointerup.bind(this)(oid, ev) }),\n                l3 = (ev => { this.onRatingColTouchstart.bind(this)(oid, ev) }),\n                l4 = (ev => { this.onRatingColTouchup.bind(this)(oid, ev) });\n          if (!!col) {\n            if (this.listeners.has(col)) {\n              // remove previous listeners since they might belong to a different oid:\n              this.G.L.trace(\"PollPage.update_order removing old event listeners\");\n              const old = this.listeners.get(col);\n              col.removeEventListener(\"pointerdown\", old[0], true);\n              col.removeEventListener(\"pointerup\", old[1], true);\n              col.removeEventListener(\"touchstart\", old[2], true);\n              col.removeEventListener(\"touchup\", old[3], true);\n            }\n            // add new listeners for this oid:\n            col.addEventListener(\"pointerdown\", l1, true);\n            col.addEventListener(\"pointerup\", l2, true);\n            col.addEventListener(\"touchstart\", l3 , true);\n            col.addEventListener(\"touchup\", l4, true);\n            this.listeners.set(col, [l1, l2, l3, l4]);  \n          }\n        }  \n        //window.alert(\"updated\");\n        this.G.L.trace(\"PollPage.update_order registered event listeners\", this.sortingcounter);\n      }, 100);\n    } \n  }\n\n  set_slider_color(oid: string, value: number) {\n    this.slidercolor[oid] = \n      (value == 0) ? 'vodlered' : \n      (this.votedfor == oid) ? 'vodledarkgreen' :\n      (value + ((this.p.T.approval_scores_map.get(oid) / this.p.T.n_not_abstaining) || 0) * 100 <= 100) ? 'vodleblue' : \n      'vodlegreen';\n  }\n\n  // CONTROLS:\n\n  toggle_show_live() {\n    this.show_live = !this.show_live;\n    if (this.show_live) {\n      this.update_order();\n    }\n  }\n\n  expand(oid: string) {\n    this.option_expanded[oid] = !this.option_expanded[oid];\n  }\n\n  // rating slider:\n  // TODO: 1 second after any change to a rating, wait another second if the pointer/mouse is currently down, else call rating_change_ended().\n\n  get_slider(oid: string) {\n    this.G.L.trace(\"PollPage.get_slider \", this.sortingcounter);\n    return <HTMLInputElement>document.getElementById('slider_'+oid+\"_\"+this.sortingcounter);\n  }\n\n  set_slider_values() {\n    /** update slider knob positions to current proxy ratings from cache */\n    for (let oid of this.p.oids) {\n      this.get_slider(oid).value = this.p.proxy_ratings_map.get(oid).get(this.p.myvid).toString();\n    }\n  }\n\n  get_slider_value(oid: string) {\n    /** get slider knob position */\n    const slider = this.get_slider(oid);\n    return !slider ? 0 : Number(slider.value);\n  }\n\n  apply_sliders_rating(oid: string) {\n    /** update own rating in cache on basis of slider knob position,\n     *  but don't store it in the database yet (see also rating_change_ended()).\n     */\n    if (!this.delegate || this.rate_yourself_toggle[oid]) {\n      this.p.set_my_own_rating(oid, Math.round(this.get_slider_value(oid)), false);\n    }\n    this.show_stats();\n  }\n\n  onRatingSliderFocus(oid: string): boolean {\n    /** called as soon as range slider gets focus */\n    this.G.L.entry(\"PollPage.onRatingSliderFocus\");\n    return true;\n  }\n\n  onRatingSliderChange(oid: string): boolean {\n    /** called whenever a slider is moved */\n    var slider = this.get_slider(oid),\n        value = Number(slider.value);\n    // window.alert(\"onRatingChange \" + value);\n    this.set_slider_color(oid, value);\n    this.apply_sliders_rating(oid);\n    return true;\n  }\n\n  onRatingSliderBlur(oid: string): boolean {\n    /** called when the slider loses focus */\n    this.G.L.entry(\"PollPage.onRatingSliderBlur\");\n    this.rating_change_ended(oid);\n    return true;\n  }\n\n  rating_change_ended(oid: string) {\n    /** Called right after releasing the slider. \n     *  Stores slider position in own rating cache AND database. */\n    // TODO: make sure this is really always called right after releasing the slider!\n    this.G.L.entry(\"PollPage.rating_change_ended\");\n    this.p.have_acted = true;\n    if (!this.delegate || this.rate_yourself_toggle[oid]) {\n      this.p.set_my_own_rating(oid, Math.round(this.get_slider_value(oid)), true);\n    }\n    this.update_order();\n    this.G.D.save_state();\n  }\n\n  dragged_oid: string = undefined; // used in onRatingColPointerdown\n\n  // The following three handlers prevent the slider from responding when pointer is not on knob:\n  \n  onRatingColPointerdown(oid: string, ev: Event): boolean {\n    /** event listener called when user starts clicking slider */\n    this.p.end_if_past_due();\n    if (!this.p.allow_voting) return false;\n    this.dragged_oid = oid;\n    const pos = this.get_knob_pos(oid), x = !ev ? 0 : (ev instanceof PointerEvent) ? (<PointerEvent>ev).clientX : (<TouchEvent>ev).touches[0].clientX;\n    this.G.L.entry(\"onRatingColPointerdown\", this.sortingcounter, oid, this.p.options[oid].name, x, pos);\n    // window.alert(\"onRatingColPointerdown \" + pos.left + \" \" + x + \" \" + pos.right);\n    if ((x < pos.left) || (x > pos.right)) {\n      this.swallow_event(ev);\n      return false;\n    }\n    return true;\n  }\n\n  onRatingColTouchstart(oid: string, ev: Event): boolean {\n    /** event listener called when user starts touching slider */\n    this.p.end_if_past_due();\n    if (!this.p.allow_voting) return false;\n    this.dragged_oid = oid;\n    const pos = this.get_knob_pos(oid), x = !ev ? 0 : (ev instanceof PointerEvent) ? (<PointerEvent>ev).clientX : (<TouchEvent>ev).touches[0].clientX;\n    this.G.L.entry(\"onRatingColTouchstart\", oid, x, pos);\n    // window.alert(\"onRatingColTouchstart \" + pos.left + \" \" + x + \" \" + pos.right);\n    if ((x < pos.left) || (x > pos.right)) {\n      this.swallow_event(ev);\n      return false;\n    }\n    return true;\n  }\n\n  onRatingColPointerup(oid: string, ev: Event): boolean {\n    /** event listener called when user stops clicking slider */\n    this.p.end_if_past_due();\n    if (!this.p.allow_voting) return false;\n    // FIXME: not always firing on Android if click is too short\n    this.G.L.entry(\"onRatingColPointerup\", oid, this.dragged_oid);\n    if (oid != this.dragged_oid) {\n      this.swallow_event(ev);\n      this.dragged_oid = null;\n      this.update_order();\n      return false;\n    } else {\n      this.rating_change_ended(oid);\n      this.dragged_oid = null;\n      return true;\n    }\n  }\n\n  onRatingColTouchup(oid: string, ev: Event): boolean {\n    /** event listener called when user stops touching slider */\n    this.p.end_if_past_due();\n    if (!this.p.allow_voting) return false;\n    // FIXME: not always firing on Android if click is too short\n    this.G.L.entry(\"onRatingColTouchup\", oid, this.dragged_oid);\n    if (oid != this.dragged_oid) {\n      this.swallow_event(ev);\n      this.dragged_oid = null;\n      this.update_order();\n      return false;\n    } else {\n      this.rating_change_ended(oid);\n      this.dragged_oid = null;\n      return true;\n    }\n  }\n\n  onRatingColClick(oid: string, ev: MouseEvent): boolean {\n    /** event listener called after clicking or touching slider has ended */\n    this.p.end_if_past_due();\n    if (!this.p.allow_voting) return false;\n    const pos = this.get_knob_pos(oid), x = ev.clientX;\n    this.G.L.entry(\"onRatingColClick\", oid, this.p.options[oid].name, x, pos);\n    // window.alert(\"onRatingColClick \" + pos.left + \" \" + x + \" \" + pos.right);\n    if ((x < pos.left) || (x > pos.right)) {\n      this.swallow_event(ev);\n      return false;\n    }\n    return true;\n  }\n\n  onBodyPointerup(ev: Event): boolean {\n    /** event listener called when click ended outside slider area */\n    this.p.end_if_past_due();\n    if (!this.p.allow_voting) return false;\n    // if clicking started in a slider, call that slider's pointerup handler:\n    if (this.dragged_oid) {\n      this.G.L.entry(\"onBodyPointerup\");\n      this.onRatingColPointerup(this.dragged_oid, ev);\n    }\n    return true;\n  }\n\n  onBodyTouchup(ev: Event): boolean {\n    /** event listener called when touching ended outside slider area */\n    this.p.end_if_past_due();\n    if (!this.p.allow_voting) return false;\n    // if touching started in a slider, call that slider's touchup handler:\n    if (this.dragged_oid) {\n      this.G.L.entry(\"onBodyTouchup\");\n      this.onRatingColTouchup(this.dragged_oid, ev);\n    }\n    return true;\n  }\n\n  get_knob_pos(oid: string) {\n    /** get the slider knob position (left and right pixel coordinates)\n     *  to be able to compare with click/touch coordinate:\n     */\n    const slider = this.get_slider(oid), \n          slider_rect = this.get_screen_coords(slider),\n          value = this.get_slider_value(oid),\n          knob_center_x = slider_rect.left + (slider_rect.right - slider_rect.left) * value / 100;\n    this.G.L.trace(\"pointer slider value\", value);\n    return {left: knob_center_x - 20, right: knob_center_x + 20}\n  }\n\n  get_screen_coords(element: HTMLElement): DOMRect {\n    /** get the screen coordinates of an HTML element */\n    if (!element) return new DOMRect();\n    return element.getBoundingClientRect();\n  }\n\n  swallow_event(ev: Event) {\n    /** Stop any form of propagation of an event. \n     *  Used to disable slider reaction outside knob. */\n    this.G.L.trace(\"swallowing event\", ev);\n    // window.alert(\"swallow 1\");\n    // FIXME: does not work in Android app and Chrome-simulated mobile devices yet!\n    if (!!ev) {\n      // window.alert(\"swallow 2\");\n      ev.stopPropagation();\n      ev.stopImmediatePropagation();\n      ev.preventDefault();  \n    }\n  }\n\n  // DIALOGS:\n\n  currentModal = null;\n\n  async checkmark_clicked() {\n    const confirm = await this.alertCtrl.create({ \n      message: this.translate.instant(\n        'poll.checkmark-clicked'), \n      buttons: [\n        { \n          text: this.translate.instant('OK'),\n          role: 'Ok', \n          handler: () => {\n          } \n        } \n      ] \n    }); \n    await confirm.present(); \n  }\n\n  delegate_dialog(event: Event) {\n    /** open the delegation dialog popover */\n    this.p.end_if_past_due();\n    if (this.p.allow_voting) {\n      this.popover.create({\n        event, \n        component: DelegationDialogPage, \n        translucent: true,\n        showBackdrop: true,\n        componentProps: {parent: this}\n      })\n      .then((popoverElement)=>{\n        popoverElement.present();\n      });\n    }\n  }\n\n  async assist_dialog() {\n    /** open the assist modal */\n    this.p.end_if_past_due();\n    if (this.p.allow_voting) {\n      const modal = await this.modalController.create({\n          component: AssistPage, \n  //        translucent: true,\n  //        cssClass: 'assist',\n  //        showBackdrop: true,\n          componentProps: {P: this},\n          backdropDismiss​: false\n  //        swipeToClose: true,\n  //        presentingElement: this.routerOutlet.nativeEl\n      });\n      modal.present();\n\n      this.currentModal = modal;\n    }\n  }\n  \n  explain_approval_dialog(oid: string) {\n    /** open the explanation dialog modal */\n    this.modalController.create({\n        component: ExplainApprovalPage, \n//        translucent: true,\n        cssClass: 'explain-approval',\n        showBackdrop: true,\n        componentProps: {parent: this, oid: oid},\n        swipeToClose: true,\n        presentingElement: this.routerOutlet.nativeEl\n    })\n    .then((modalElement)=>{\n      modalElement.present();\n    })\n  }\n\n  async revoke_delegation_dialog() { \n    /** open the delegation revokation confirmation dialog alert */\n    this.p.end_if_past_due();\n    if (this.p.allow_voting) {\n      const confirm = await this.alertCtrl.create({ \n        message: this.translate.instant(\n          'poll.revoke_delegation', {nickname: this.delegate}), \n        buttons: [\n          { \n            text: this.translate.instant('cancel'), \n            role: 'Cancel',\n            handler: () => { \n              console.log('Confirm Cancel.');  \n            } \n          },\n          { \n            text: this.translate.instant('OK'),\n            role: 'Ok', \n            handler: () => {\n              this.G.Del.revoke_delegation(this.pid, this.G.Del.get_my_outgoing_dids_cache(this.pid).get(\"*\"), '*');\n              this.delegate = null;\n              this.delegation_status = 'none';\n              this.update_delegation_info();\n              this.G.D.save_state();\n            } \n          } \n        ] \n      }); \n      await confirm.present(); \n    }\n  } \n\n  add_option(event: Event) {\n    /** open the add option dialog popover */\n    this.p.end_if_past_due();\n    if (this.p.allow_voting) {\n      // TODO: also add delegation if ospec.type == \"-\"?\n      this.popover.create({\n  //      event, // TODO: use this from Ionic v6 on!\n  //      side: 'top', // TODO: use this from Ionic v6 on!\n        component: AddoptionDialogPage, \n        translucent: true,\n        showBackdrop: true,\n        cssClass: 'add-option-class',\n        componentProps: {parent: this}\n      })\n      .then((popoverElement)=>{\n        popoverElement.present();\n      });\n    }\n  }\n\n  // Glossary buttons:\n\n  show_glossary = false;\n  glossary_key: string;\n\n  glossary(key: string) {\n    this.glossary_key = key;\n    this.show_glossary = true;\n  }\n  dismiss_glossary() {\n    this.show_glossary=false;\n  }\n\n}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PollPage } from './poll.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PollPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PollPageRoutingModule {}\n","/*\n(C) Copyright 2015–2022 Potsdam Institute for Climate Impact Research (PIK), authors, and contributors, see AUTHORS file.\n\nThis file is part of vodle.\n\nvodle is free software: you can redistribute it and/or modify it under the \nterms of the GNU Affero General Public License as published by the Free \nSoftware Foundation, either version 3 of the License, or (at your option) \nany later version.\n\nvodle is distributed in the hope that it will be useful, but WITHOUT ANY \nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR \nA PARTICULAR PURPOSE. See the GNU Affero General Public License for more \ndetails.\n\nYou should have received a copy of the GNU Affero General Public License \nalong with vodle. If not, see <https://www.gnu.org/licenses/>. \n*/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PollPageRoutingModule } from './poll-routing.module';\nimport { SharedcomponentsModule } from '../sharedcomponents/sharedcomponents.module';\n\nimport { PollPage } from './poll.page';\nexport { PollPage } from './poll.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PollPageRoutingModule,\n    SharedcomponentsModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [PollPage]\n})\nexport class PollPageModule {}\n"],"sourceRoot":"webpack:///","file":"186.763f81be01dcb504.js"}