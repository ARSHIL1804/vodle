{"version":3,"mappings":"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","names":["i0","ctx_r18","valid","ctx_r20","ctx_r21","ctx_r23","ctx_r25","ctx_r26","ctx_r28","ctx_r32","ctx_r34","ctx_r36","ctx_r38","ctx_r40","routes","path","component","constructor","formBuilder","translate","G","this","L","entry","ngOnInit","formGroup","group","email","FormControl","Validators","pw","password","S","password_regexp","confirm_password","validators","passwords_match","language","theme","ionViewWillEnter","D","page","editing_email","editing_password","showing_password","advanced_expanded","notify_of","ionViewDidEnter","ready","onDataReady","onSelectServerReady","select_server","fill_form","ionViewDidLeave","save_state","exit","onDataChange","set_email","c","get","value","set_password","fg","set_language","set_theme","set_db","db","set_db_from_pid","db_from_pid","set_db_custom_server_url","db_custom_server_url","set_db_custom_password","db_custom_password","setValue","navigator","languages","slice","selectServerFormGroup","cls","notification_classes","get_notify_of","notify_changed","Object","entries","set_notify_of","trace","SettingsPage","selectors","IonInput","SelectServerComponent","IonSelect","SettingsPageRoutingModule","RouterModule","SettingsPageModule","CommonModule","FormsModule","IonicModule","ReactiveFormsModule","SharedcomponentsModule","TranslateModule"],"sources":["./src/app/settings/settings.page.html","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.page.ts","./src/app/settings/settings.module.ts"],"sourcesContent":["<ion-header>\n  <ion-toolbar style=\"padding-right:11px;\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title [innerHtml]=\"'settings.-page-title'|translate\" class=\"ion-no-padding ion-no-margin\"></ion-title>\n    <ion-thumbnail slot=\"end\">\n      <ion-img src=\"./assets/topright_icon.png\"></ion-img>\n    </ion-thumbnail>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *ngIf=\"ready\">\n  <form [formGroup]=\"formGroup\">\n\n    <!--DATA STORAGE:-->\n\n    <ion-item color=\"primary\" [innerHtml]=\"'settings.data-storage'|translate\"> \n    </ion-item>\n    <ion-item>\n      <small [innerHtml]=\"'settings.data-storage-msg'|translate\"></small>\n    </ion-item>\n\n    <ion-grid class=\"ion-no-padding\">\n      <ion-row class=\"ion-no-padding\">\n        <ion-col class=\"ion-no-padding\">\n          <ion-item>\n            <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'email'|translate\"></ion-label>\n            <ion-input \n              formControlName=\"email\" \n              [placeholder]=\"'settings.email-placeholder'|translate\"\n              type=\"text\" inputmode=\"email\" required\n              [readonly]=\"!editing_email\"\n              [style]=\"editing_email\n                    ?'pointer-events:;'\n                    :'pointer-events:none;font-size:smaller;'\"\n              (keydown.enter)=\"editing_email=!formGroup.get('email').valid\"\n              (keydown.tab)=\"editing_email=!formGroup.get('email').valid\"\n              (ionChange)=\"set_email()\" debounce=\"100\">\n            </ion-input>\n            <!--TODO: click OK when hitting enter and valid-->\n          </ion-item>\n        </ion-col>\n        <ion-button fill=\"clear\"\n            tabindex=\"-1\" style=\"padding-top: 10px;\"\n            [disabled]=\"editing_email && !formGroup.get('email').valid\"\n            (click)=\"editing_email=!editing_email\">\n          <!--TODO: give focus to field-->\n          <ion-icon [name]=\"editing_email?'checkmark-outline':'pencil-outline'\"></ion-icon>\n          <span [innerHtml]=\"(editing_email?'OK':'settings.edit')|translate\"></span>\n        </ion-button>\n      </ion-row>\n    </ion-grid>\n    <div class=\"validation-errors\">\n    <ng-container *ngFor=\"let validation of G.S.validation_messages.email\">\n      <div class=\"error-message\" \n          *ngIf=\"formGroup.get('email').hasError(validation.type) \n                  && (formGroup.get('email').dirty || formGroup.get('email').touched)\"\n          [innerHtml]=\"validation.message|translate\">\n      </div>\n    </ng-container>\n    </div>\n\n    <div formGroupName=\"pw\">\n      <ion-grid class=\"ion-no-padding\">\n        <ion-row class=\"ion-no-padding\">\n          <ion-col class=\"ion-no-padding\">\n            <ion-item lines=\"none\">\n              <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'password'|translate\"></ion-label>\n              <ion-input \n                formControlName=\"password\"\n                clearOnEdit=\"false\" clearInput=\"true\"\n                [readonly]=\"!editing_password\"\n                [type]=\"showing_password?'text':'password'\" required \n                [style]=\"editing_password\n                      ?'pointer-events:;'\n                      :'pointer-events:none;font-size:smaller;'\"\n                (ionChange)=\"set_password()\" debounce=\"100\">\n              </ion-input>\n            </ion-item>\n          </ion-col>\n          <ion-buttons>\n            <ion-button \n                tabindex=\"-1\" style=\"padding-top: 15px;\" fill=\"clear\" color=\"primary\" \n                (click)=\"showing_password=!showing_password\">\n              <ion-icon [name]=\"showing_password?'eye-off-outline':'eye-outline'\"></ion-icon>\n              <!--&nbsp;<span [innerHtml]=\"(showing_password?'hide':'show')|translate\"></span>-->\n            </ion-button>\n            <ion-button fill=\"clear\"\n                tabindex=\"-1\" style=\"padding-top: 10px;\" color=\"primary\" \n                (click)=\"editing_password=!editing_password\" \n                [disabled]=\"editing_password && !formGroup.get('pw').valid\">\n              <ion-icon [name]=\"editing_password?'checkmark-outline':'pencil-outline'\"></ion-icon>\n              <!--<span [innerHtml]=\"(editing_password?'OK':'settings.edit')|translate\"></span>-->\n            </ion-button>\n          </ion-buttons>\n        </ion-row>\n      </ion-grid>\n      <div class=\"validation-errors\">\n      <ng-container *ngFor=\"let validation of G.S.validation_messages.password\">\n        <div class=\"error-message\" \n            *ngIf=\"formGroup.get('pw.password').hasError(validation.type) \n                    && (formGroup.get('pw.password').dirty || formGroup.get('pw.password').touched)\"\n            [innerHtml]=\"validation.message|translate\">\n        </div>\n      </ng-container>\n      </div>\n      <ng-container *ngIf=\"editing_password\">\n        <ion-item>\n          <ion-label position=\"floating\" color=\"primary\" [innerHtml]=\"'retype-password'|translate\"></ion-label>\n          <ion-input \n            formControlName=\"confirm_password\" \n            #input_retype_password \n            [disabled]=\"!editing_password\"\n            clearOnEdit=\"false\" clearInput=\"true\"\n            [type]=\"showing_password?'text':'password'\"required \n            [style]=\"editing_password\n              ?'pointer-events:;'\n              :'pointer-events:none;font-size:smaller;'\"\n            (keydown.enter)=\"editing_password=!formGroup.get('pw').valid;showing_password=formGroup.get('pw').valid?false:showing_password\"\n            (keydown.tab)=\"editing_password=!formGroup.get('pw').valid;showing_password=formGroup.get('pw').valid?false:showing_password\"\n            (ionChange)=\"set_password()\" debounce=\"100\">\n          </ion-input>\n        </ion-item>\n        <div class=\"validation-errors\">\n        <ng-container *ngFor=\"let validation of G.S.validation_messages.passwords_match\">\n          <div class=\"error-message\" \n              *ngIf=\"formGroup.get('pw').hasError('must_match') \n                      && (formGroup.get('pw.confirm_password').dirty || formGroup.get('pw.confirm_password').touched)\"\n              [innerHtml]=\"validation.message|translate\">\n          </div>\n        </ng-container>\n        </div>\n      </ng-container>\n    </div>\n  </form>\n\n  <ion-item color=\"light\" (click)=\"advanced_expanded=!advanced_expanded\">\n    <ion-icon size=\"small\" [name]=\"advanced_expanded?'caret-down-outline':'caret-forward-outline'\" color=\"primary\"></ion-icon>\n    <ion-label>\n      <small [innerHtml]=\"'&nbsp;&nbsp;&nbsp;'+('draftpoll.advanced-settings'|translate)\"></small>\n    </ion-label>\n  </ion-item>\n  <app-select-server #select_server [style.display]=\"advanced_expanded?'block':'none'\" [page]=\"'settings'\" [page_object]=\"this\">\n  </app-select-server>\n\n  <!--APPEARANCE-->\n\n  <form [formGroup]=\"formGroup\">\n    <ion-item color=\"primary\" [innerHtml]=\"'settings.appearance'|translate\">\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\" color=\"primary\">\n        <ion-icon name=\"language-outline\"></ion-icon>&nbsp;\n        <span [innerHtml]=\"'language'|translate\"></span>\n      </ion-label>\n      <ion-select #ionSelects formControlName=\"language\" (ionChange)=\"set_language()\">\n        <ion-select-option *ngFor=\"let lang of translate.langs\" [value]=\"lang\" [innerHtml]=\"G.S.language_names[lang]\"></ion-select-option>\n      </ion-select>\n    </ion-item>\n  <!--  <ion-item>\n      <ion-label position=\"floating\" color=\"primary\">Theme</ion-label>\n      <ion-select formControlName=\"theme\" cancelText=\"Cancel\" okText=\"OK\">\n        <ion-select-option value=\"light\">Light</ion-select-option>\n        <ion-select-option value=\"dark\">Dark</ion-select-option>\n      </ion-select>\n    </ion-item>-->\n\n    <!--TODO: NOTIFICATIONS\n      - if \"denied\", grey it out and show a message to please grant notifications first.\n    -->\n\n  </form>\n  <ion-item color=\"primary\" [innerHtml]=\"'settings.notifications'|translate\">\n  </ion-item>\n  <ion-item>\n    <ion-checkbox slot=\"start\" [(ngModel)]=\"notify_of.new_option\" (ngModelChange)=\"notify_changed()\"></ion-checkbox><ion-label [innerHtml]=\"'notify_of.new_option'|translate\"></ion-label>\n  </ion-item>\n  <ion-item>\n    <ion-checkbox slot=\"start\" [(ngModel)]=\"notify_of.delegation_accepted\" (ngModelChange)=\"notify_changed()\"></ion-checkbox><ion-label [innerHtml]=\"'notify_of.delegation_accepted'|translate\"></ion-label>\n  </ion-item>\n  <ion-item>\n    <ion-checkbox slot=\"start\" [(ngModel)]=\"notify_of.delegation_declined\" (ngModelChange)=\"notify_changed()\"></ion-checkbox><ion-label [innerHtml]=\"'notify_of.delegation_declined'|translate\"></ion-label>\n  </ion-item>\n  <ion-item>\n    <ion-checkbox slot=\"start\" [(ngModel)]=\"notify_of.poll_closed\" (ngModelChange)=\"notify_changed()\"></ion-checkbox><ion-label [innerHtml]=\"'notify_of.poll_closed'|translate\"></ion-label>\n  </ion-item>\n  <!--and:\n  when my vote turns into an abstention\n  when my voting weight changes\n  when my delegate's weight changes\n  when my delegate delegates my ratings further\n  when my delegate changed their ratings\n  -->\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { Component, OnInit, ViewChild, ViewChildren, QueryList } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl, ValidationErrors, AbstractControl } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { IonInput, IonSelect } from '@ionic/angular';\n\nimport { GlobalService } from \"../global.service\";\nimport { SelectServerComponent } from '../sharedcomponents/select-server/select-server.component';\n\n/*\nTODO:\n- when changing password or server, alert that user needs to update password or server on other devices as well\n*/\n\n\n// PAGE:\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  // ATTRIBUTES:\n\n  // template components:\n\n  @ViewChild(IonInput, { static: false }) input_retype_password: IonInput;\n  @ViewChild(SelectServerComponent, { static: false }) select_server: SelectServerComponent;\n  @ViewChildren(IonSelect) ionSelects: QueryList<IonSelect>;\n\n  // form:\n\n  formGroup: FormGroup;\n  editing_email: boolean;\n  editing_password: boolean;\n  showing_password: boolean;\n  advanced_expanded: boolean;\n  notify_of: { \n    delegation_accepted?: boolean,\n    delegation_declined?: boolean,\n    new_option?: boolean,\n    poll_closed?: boolean\n  };\n\n  // LIFECYCLE:\n\n  ready = false;  \n\n  constructor(\n      public formBuilder: FormBuilder,\n      public translate: TranslateService,\n      public G: GlobalService) { \n    this.G.L.entry(\"SettingsPage.constructor\");\n  }\n\n  ngOnInit() {\n    this.G.L.entry(\"SettingsPage.ngOnInit\");\n    this.formGroup = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([Validators.required, Validators.email])),\n      pw: this.formBuilder.group({\n        password: new FormControl('', Validators.compose([\n          Validators.required,\n          Validators.minLength(8),\n          Validators.pattern(this.G.S.password_regexp)\n        ])),\n        confirm_password: new FormControl('', Validators.required),\n      }, {\n        validators: [this.G.S.passwords_match]\n      }),\n      language: new FormControl('', Validators.required),\n      theme: new FormControl('', Validators.required),\n    });\n  }\n  \n  ionViewWillEnter() {\n    this.G.L.entry(\"SettingsPage.ionViewWillEnter\");\n    this.G.D.page = this;\n    this.editing_email = false;\n    this.editing_password = false;\n    this.showing_password = false;\n    this.advanced_expanded = false;\n    this.notify_of = {};\n  }\n\n  ionViewDidEnter() {\n    this.G.L.entry(\"SettingsPage.ionViewDidEnter\");\n    if (this.G.D.ready && !this.ready) this.onDataReady();\n  }\n\n  onDataReady() {\n    // called when DataService initialization was slower than view initialization\n    this.G.L.entry(\"SettingsPage.onDataReady\");\n    this.ready = true;\n  }\n\n  onSelectServerReady(select_server:SelectServerComponent) {\n    // called by SelectServerComponent is ready\n    this.select_server = select_server;\n    this.fill_form();\n  }\n\n  ionViewDidLeave() {\n    this.G.L.entry(\"SettingsPage.ionViewDidLeave\");\n    this.G.D.save_state();\n    this.G.L.exit(\"SettingsPage.ionViewDidLeave\");\n  }\n\n  // OTHER HOOKS:\n  \n  // for DataService:\n\n  onDataChange() {\n    // called whenever data stored in database has changed\n    this.G.L.entry(\"SettingsPage.onDataChange\");\n    this.fill_form();\n  }\n\n  // for form actions:\n\n  set_email() {\n    let c = this.formGroup.get('email');\n    if (c.valid) this.G.S.email = c.value; // will trigger data move\n  }\n  set_password() {\n    let fg = this.formGroup.get('pw');\n    if (fg.valid) this.G.S.password = fg.get('password').value; // will trigger data move\n  }\n  set_language() {\n    let c = this.formGroup.get('language');\n    if (c.valid) this.G.S.language = c.value;\n  }\n  set_theme() {\n    let c = this.formGroup.get('theme');\n    if (c.valid) this.G.S.theme = c.value;\n  }\n\n  // selectServer component hooks:\n\n  set_db(value: string) {\n    this.G.S.db = value;\n  }\n  set_db_from_pid(value: string) {\n    this.G.S.db_from_pid = value;\n  }\n  set_db_custom_server_url(value: string) {\n    this.G.S.db_custom_server_url = value;\n  }\n  set_db_custom_password(value: string) {\n    this.G.S.db_custom_password = value;\n  }\n\n  // OTHER METHODS:\n\n  private fill_form() {\n    this.G.L.entry(\"SettingsPage.fill_form\");\n    // fill form fields with values from data or defaults\n    this.formGroup.setValue({\n      email: this.G.S.email||'',\n      pw: {\n        password: this.G.S.password||'',\n        confirm_password: this.G.S.password||'',\n      },\n      language: this.G.S.language||navigator.languages[0].slice(0,2),\n      theme: this.G.S.theme||'light',\n    });\n    this.select_server.selectServerFormGroup.setValue({\n      db: this.G.S.db||'',\n      db_from_pid: this.G.S.db_from_pid||'',\n      db_custom_server_url: this.G.S.db_custom_server_url||'',\n      db_custom_password: this.G.S.db_custom_password||'',\n    });\n    for (const cls of this.G.S.notification_classes) {\n      this.notify_of[cls] = this.G.S.get_notify_of(cls);\n    }\n  }\n\n  notify_changed() {\n    for (const [cls, value] of Object.entries(this.notify_of)) {\n      this.G.S.set_notify_of(cls, value as boolean);\n      this.G.L.trace(\"SettingsPage.notify_changed\", cls, value);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\nimport { SharedcomponentsModule } from '../sharedcomponents/sharedcomponents.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    SettingsPageRoutingModule,\n    SharedcomponentsModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n"],"sourceRoot":"webpack:///","file":"451.13a09e715d0f77ee.js"}