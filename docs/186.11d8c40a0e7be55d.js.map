{"version":3,"mappings":"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","names":["ExpandableComponent","constructor","renderer","ngAfterViewInit","this","setStyle","expandWrapper","nativeElement","expandHeight","ngOnInit","i0","selectors","ElementRef","ctx_r8","ctx_r27","ctx_r32","ctx_r40","oxw","ctx_r42","ctx_r43","ctx_r45","ctx_r46","ctx_r48","ctx_r49","ctx_r60","ctx_r62","ctx_r68","ctx_r75","ctx_r77","ctx_r78","ctx_r79","ctx_r80","ctx_r81","ctx_r82","ctx_r83","ctx_r84","ctx_r85","ctx_r86","ctx_r87","ctx_r89","ctx_r92","ctx_r94","ctx_r95","ctx_r96","ctx_r97","ctx_r98","ctx_r99","PollPage","changeDetector","router","route","routerOutlet","loadingController","alertCtrl","popover","modalController","translate","G","Array","Math","Object","window","environment","PI","Set","Map","undefined","L","entry","params","subscribe","pid","ionViewWillEnter","D","page","f","ev","detectChanges","addEventListener","specs","JSON","parse","getp","details_expanded","incoming_delegation_expanded","option_expanded","exit","ionViewDidEnter","ready","onDataReady","debug","P","polls","warn","navigate","p","state","error","info","tally_all","oidsorted","T","oids_descending","update_order","setTimeout","bind","show_stats","update_delegation_info","on_delegate_toggle_change","have_seen","onDataChange","news","N","filter","ionViewWillLeave","oid","delegate","rate_yourself_toggle","set_my_own_rating","round","get_slider_value","auto_dismiss","dismiss","key","setp","stringify","ionViewDidLeave","save_state","n_indirect_clients","get_n_indirect_clients","myvid","cache","incoming_dids_caches","accepted_requests","declined_requests","did","from","url","status","push","startsWith","Del","get_my_outgoing_dids_cache","get","trace","get_delegate_nickname","agreement","get_agreement","delegation_status","update_delegation_toggles","a","accepted_oids","active_oids","has","onScroll","scroll_position","detail","scrollTop","on_rate_yourself_toggle_change","update_my_delegation","sum","b","entries","n_delegated","approval_scores_map","shares_map","approvals_map","votedfor","votes_map","oids","n_not_abstaining","share","bar","document","getElementById","pie","R","pieradius","dx","sin","two_pi","dy","cos","more_than_180_degrees_flag","approved","c","width","baseVal","valueAsString","toString","x","setAttribute","g","set_slider_color","get_my_proxy_rating","needle","knob","delegate_vid","get_potential_effective_delegate","rating","proxy_ratings_map","x2","cx","force","final_rand","make_final_rand","length","needs_refresh","i","refresh_paused","loadingElement","create","message","instant","spinner","duration","present","onDidDismiss","sortingcounter","col","l1","onRatingColPointerdown","l2","onRatingColPointerup","l3","onRatingColTouchstart","l4","onRatingColTouchup","listeners","old","removeEventListener","set","value","slidercolor","expand","get_slider","set_slider_values","slider","e","Number","apply_sliders_rating","onRatingSliderFocus","onRatingSliderChange","onRatingSliderBlur","rating_change_ended","running","dragged_oid","pos","get_knob_pos","PointerEvent","clientX","touches","options","name","left","right","swallow_event","onRatingColClick","onBodyPointerup","onBodyTouchup","slider_rect","get_screen_coords","knob_center_x","element","getBoundingClientRect","DOMRect","stopPropagation","stopImmediatePropagation","preventDefault","delegate_dialog","event","component","DelegationDialogPage","translucent","showBackdrop","componentProps","parent","then","popoverElement","assist_dialog","modal","AssistPage","currentModal","explain_approval_dialog","ExplainApprovalPage","cssClass","swipeToClose","presentingElement","nativeEl","modalElement","revoke_delegation_dialog","nickname","buttons","text","role","handler","console","log","revoke_delegation","add_option","AddoptionDialogPage","glossary","glossary_key","show_glossary","dismiss_glossary","IonContent","ctx","routes","path","PollPageRoutingModule","RouterModule","PollPageModule","CommonModule","FormsModule","IonicModule","SharedcomponentsModule","TranslateModule"],"sources":["./src/app/sharedcomponents/expandable/expandable.component.ts","./src/app/sharedcomponents/expandable/expandable.component.html","./src/app/poll/poll.page.html","./src/app/poll/poll.page.ts","./src/app/poll/poll-routing.module.ts","./src/app/poll/poll.module.ts"],"sourcesContent":["import { Component, OnInit, ElementRef, Renderer2, Input, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-expandable',\n  templateUrl: './expandable.component.html',\n  styleUrls: ['./expandable.component.scss']\n})\nexport class ExpandableComponent implements OnInit {\n\n  @ViewChild('expandWrapper', {read: ElementRef}) expandWrapper;\n  @Input('expanded') expanded;\n  @Input('expandHeight') expandHeight;\n\n  constructor(public renderer: Renderer2) {\n\n  }\n\n  ngAfterViewInit(){\n      this.renderer.setStyle(this.expandWrapper.nativeElement, 'height', this.expandHeight + 'px');    \n  }\n\n  ngOnInit() { }\n}\n","<div #expandWrapper class='expand-wrapper' [class.collapsed]=\"!expanded\">\n  <ng-content></ng-content>\n</div>","<!--\n  TODO: \n  - rating -> willingness?\n  - small info buttons upon first visit, shown until at least viewed once\n  - rewording of assistance texts\n  - additional explanations in assistance texts\n  - \"fix\" slider element's absolute vertical position on screen while using it, even when note above it changes height. achieve this by automatically \"scrolling\" to compensate such layout changes.  \n-->\n\n<!-- HEADER: -->\n\n<ion-header \n    (pointerup)=\"onBodyPointerup($event)\"\n    (touchup)=\"onBodyTouchup($event)\">\n  <ion-toolbar style=\"padding-right: 11px; padding-left: 16px;\">\n    <ion-buttons slot=\"start\" style=\"margin-right: 0px; margin-left: 0px; padding-left: 0px; padding-right: 0px;\">\n      <ion-menu-button style=\"padding-left: 0px!important; padding-right: 0px!important; position: relative; left: -9px;\"></ion-menu-button>\n    </ion-buttons>\n    <ion-text *ngIf=\"scroll_position < 70\" \n      style=\"font-weight: bold; font-size: larger; padding-left: 0px;\"\n      [innerHtml]=\"'poll.-page-title' | translate\">\n    </ion-text>\n    <ion-text *ngIf=\"scroll_position >= 70\"><b><i [innerHtml]=\"p.title\"></i></b></ion-text>\n    <ion-buttons slot=\"end\">\n\n      <!-- OFFLINE SIGN -->\n      <ng-container *ngIf=\"!window.navigator.onLine\">\n        <ion-icon name=\"cloud-offline-outline\" color=\"grey\"\n          style=\"position: relative; bottom: -1px;\">\n        </ion-icon>\n        <ion-icon name=\"alert-outline\" color=\"grey\">\n        </ion-icon>\n      </ng-container> \n\n      <!-- SYNCING SIGN -->\n      <ion-spinner *ngIf=\"!!p && p.syncing && window.navigator.onLine\" name=\"crescent\" color=\"grey\"></ion-spinner>\n\n      <!-- DELEGATE BUTTON: -->\n      <ion-button *ngIf=\"delegation_status!='agreed' && running\"\n          (click)=\"delegate_dialog($event)\" \n          shape=\"round\" size=\"large\" color=\"primary\" class=\"ion-no-padding ion-no-margin\">\n        <span *ngIf=\"scroll_position < 70\"\n          [innerHtml]=\"'poll.delegate-button' | translate\">\n        </span><ion-button class=\"ion-no-margin ion-no-padding\"\n            style=\"position: relative; right: -4px;\"\n            shape=\"round\" fill=\"solid\" color=\"primary\">\n          <ion-icon class=\"ion-no-margin ion-no-padding\" src=\"./assets/icon/delegate-simple.svg\">\n          </ion-icon>\n        </ion-button>\n      </ion-button>\n\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<!-- SCROLLABLE CONTENT: -->\n\n<ion-content *ngIf=\"ready\" \n    (pointerup)=\"onBodyPointerup($event)\"\n    [scrollEvents]=\"true\"\n    (ionScroll)=\"onScroll($event)\"    \n    >\n  <ion-list lines=\"full\" class=\"ion-no-margin ion-no-padding\">\n\n    <!-- NEWS -->\n\n    <ion-card *ngFor=\"let n of news\">\n      <ion-card-content class=\"ion-no-margin ion-no-padding\">\n        <ion-item lines=\"none\" class=\"ion-no-margin ion-no-padding item-text-wrap\" color=\"warning\">\n          &nbsp;&nbsp;\n          <ion-label class=\"ion-no-margin ion-no-padding\">\n            {{n.title}}\n            <small *ngIf=\"n.body\">\n              <br/>\n              {{n.body}}\n            </small>  \n          </ion-label>\n          <ion-button slot=\"end\" class=\"ion-no-margin ion-no-padding\" fill=\"clear\" size=\"small\" (click)=\"news.delete(n);G.N.dismiss(n.key)\">\n            <ion-icon slot=\"icon-only\" name=\"close-outline\" style=\"color:gray!important\">\n            </ion-icon>    \n          </ion-button>  \n        </ion-item>\n      </ion-card-content>\n    </ion-card>\n\n    <!-- GENERAL POLL INFORMATION -->\n\n    <ion-item color=\"primary\" class=\"ion-no-margin\" lines=\"none\">\n      <ion-grid class=\"ion-no-padding ion-no-margin\">\n        <ion-row class=\"ion-no-padding ion-no-margin\">\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n\n            <!-- NOTIFY OF DIFFERENT LANGUAGE: -->\n\n            <small *ngIf=\"(!!p.language) && (p.language != G.S.language)\">\n              <p [innerHtml]=\"'poll.different-language' | translate: {language: G.S.language_names[p.language]}\"></p>\n            </small>\n\n            <!-- POLL TITLE -->\n\n            <h3><b><i [innerHtml]=\"p.title\"></i></b></h3>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n    <ion-item *ngIf=\"(p.desc||'')!='' || (p.url||'') != ''\"\n        color=\"primary\" class=\"ion-padding-left ion-padding-right\" \n        style=\"cursor: pointer; --min-height: 0!important;\" lines=\"none\"\n        (click)=\"details_expanded =! details_expanded\">\n      <ion-grid class=\"ion-no-padding ion-padding-bottom ion-no-margin\" style=\"width: 100%;\">\n        <ion-row class=\"ion-no-padding ion-no-margin\">\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n\n            <!-- POLL DESCRIPTION, \"READ MORE\" LINK -->\n\n            <div [style]=\"\n                details_expanded\n                ? 'white-space: normal; overflow: hidden; text-overflow: ellipsis; width: 100%!important;'\n                : 'white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%!important;'\n                \">\n              <i *ngIf=\"(p.desc||'')!=''\" [innerHtml]=\"p.desc\"></i><span *ngIf=\"(p.desc||'')!='' && (p.url||'') != ''\">&nbsp;</span>\n              <small *ngIf=\"(p.url||'') != ''\">\n                (<ion-text \n                  class=\"externallink\" \n                  (click)=\"G.open_url_in_new_tab(G.D.fix_url(p.url))\" \n                  [innerHtml]=\"'read-more' | translate\">\n                </ion-text>)\n              </small>\n              <small>\n                &nbsp;\n                (<ion-text \n                  class=\"externallink\" \n                  [innerHtml]=\"'hide' | translate\">\n                </ion-text>)\n              </small>\n            </div>\n\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n    <ion-item color=\"primary\" class=\"ion-no-margin ion-padding-left ion-padding-right\">\n      <ion-grid class=\"ion-no-padding ion-no-margin\">\n        <ion-row class=\"ion-no-padding ion-no-margin\">\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n\n            <!-- CLOSING DATE, CLOSING SOON BADGE: -->\n\n            <small>\n              <span style=\"white-space: nowrap;\">\n                <ion-badge *ngIf=\"running && p.is_closing_soon\" \n                  class=\"ion-no-margin\" \n                  style=\"position: relative; bottom: -6px;\" \n                  color=\"danger\" \n                  [innerHtml]=\"'badges.closing-soon'|translate\">\n                </ion-badge>\n                <span *ngIf=\"running && !p.is_closing_soon\"\n                  [innerHtml]=\"'poll.closes' | translate\">\n                </span><span *ngIf=\"!running\"\n                  [innerHtml]=\"'poll.closed' | translate\">\n                </span>&nbsp;<b \n                  [innerHtml]=\"G.D.format_date(p.due)\">\n                </b>\n              </span>&nbsp;&nbsp;&nbsp;&nbsp;\n              <span style=\"white-space: nowrap;\">\n                <ion-icon color=\"light\" style=\"position: relative; top: 2px\" [name]=\"(p.type=='share')?'cut-outline':'trophy-outline'\"></ion-icon>&nbsp;<span [innerHtml]=\"((p.type=='share')?'poll.type-share':'poll.type-winner')|translate\"></span>\n              </span>\n            </small>\n            <br/>\n\n            <!-- ASSIST BUTTON: -->\n\n            <ion-button shape=\"round\" class=\"ion-float-right ion-no-padding ion-no-margin\" (click)=\"assist_dialog()\" color=\"success\" style=\"position: absolute; top: 6px; right: 10px;\">\n              <ion-icon name=\"color-wand-outline\" slot=\"icon-only\" \n                style=\"margin: 5px;\"></ion-icon>\n            </ion-button>\n    \n            <!-- STATISTICS: -->\n\n            <span style=\"white-space: nowrap;\">\n              <ion-icon \n                  color=\"light\" style=\"position: relative; top: 3px\" \n                  [name]=\"p.agreement_level == 1 ? 'checkmark-done-outline' : 'analytics-outline'\">\n              </ion-icon>\n              <small style=\"white-space: nowrap;\">\n                <b>&nbsp;{{Math.round(p.agreement_level * 1000) / 10}}</b>%&nbsp;<span [innerHtml]=\"'level-of-agreement'|translate\"></span>\n              </small>\n            </span>&nbsp;&nbsp;&nbsp;\n            <span style=\"white-space: nowrap;\">\n              <ion-icon \n                  color=\"light\" style=\"position: relative; top: 3px\" \n                  name=\"people-outline\">\n              </ion-icon>&nbsp;<small style=\"white-space: nowrap;\">\n                <b>{{p.T.n_not_abstaining}}</b>&nbsp;<span [innerHtml]=\"'non-abstaining-voters'|translate\"></span>&nbsp;\n              </small><ion-button\n                  class=\"ion-no-padding ion-no-margin\" fill=\"clear\" size=\"small\" \n                  [routerLink]=\"'/inviteto/'+p.pid\" >\n                <ion-icon \n                    class=\"ion-no-padding ion-no-margin\" \n                    name=\"share-social-outline\" \n                    color=\"light\">\n                </ion-icon>  \n              </ion-button>\n            </span>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n\n    <!-- VOTE STATUS BANNER: -->\n\n    <ng-container *ngIf=\"running\">\n      <ion-item *ngIf=\"p.am_abstaining\" color=\"danger\">\n        <small>\n          <p>\n            <span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-abstaining-1'|translate\"></span>&nbsp;<wbr/>\n            <span [innerHtml]=\"'poll.hint-abstaining-2-before-wap'|translate\"></span><wbr/><span (click)=\"glossary('wap')\" style=\"cursor: pointer; white-space: nowrap\"><span class=\"externallink\" [innerHtml]=\"'poll.hint-abstaining-2-wap'|translate\"></span><ion-icon name=\"help-circle-outline\" style=\"font-size: 16px; position: relative; top:4px;\"></ion-icon></span><span [innerHtml]=\"'poll.hint-abstaining-2-after-wap'|translate\"></span>\n            <!-- assist link: -->\n            &nbsp;<span style=\"white-space: nowrap;\">\n              (<a \n                (click)=\"assist_dialog()\"\n                [innerHtml]=\"'poll.assist-me' | translate\">\n              </a>)\n            </span>\n          </p>\n        </small>\n      </ion-item>\n      <ion-item *ngIf=\"p.my_n_rated_positive == 1\" color=\"warning\">\n        <small>\n          <p>\n            <span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-only1positive-1-before-wap'|translate\"></span><wbr/><span (click)=\"glossary('wap')\" style=\"cursor: pointer; white-space: nowrap\"><span style=\"font-size: medium\" class=\"externallink\" [innerHtml]=\"'poll.hint-only1positive-1-wap'|translate\"></span><ion-icon name=\"help-circle-outline\" style=\"font-size: 16px; position: relative; top:3px;\"></ion-icon></span><span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-only1positive-1-after-wap'|translate\"></span>&nbsp;<wbr/>\n            <span [innerHtml]=\"'poll.hint-only1positive-2'|translate\"></span>\n            <!-- assist link: -->\n            &nbsp;<span style=\"white-space: nowrap;\">\n              (<a \n                (click)=\"assist_dialog()\"\n                [innerHtml]=\"'poll.assist-me' | translate\">\n              </a>)\n            </span>\n          </p>\n        </small>\n      </ion-item>\n      <ion-item *ngIf=\"p.my_n_rated_positive != 1 && p.my_n_approved == 1\" color=\"secondary\">\n        <small>\n          <p>\n            <span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-only1approved-1-before-approving'|translate\"></span><wbr/><span (click)=\"glossary('approve')\" style=\"cursor: pointer; white-space: nowrap\"><span style=\"font-size: medium\" class=\"externallink\" [innerHtml]=\"'poll.hint-only1approved-1-approving'|translate\"></span><ion-icon name=\"help-circle-outline\" style=\"font-size: 16px; position: relative; top:3px;\"></ion-icon></span><span style=\"font-size: medium\" [innerHtml]=\"'poll.hint-only1approved-1-after-approving'|translate\"></span>&nbsp;<wbr/>\n            <span [innerHtml]=\"'poll.hint-only1approved-2-before-wap'|translate\"></span><wbr/><span (click)=\"glossary('wap')\" style=\"cursor: pointer; white-space: nowrap\"><span class=\"externallink\" [innerHtml]=\"'poll.hint-only1approved-2-wap'|translate\"></span><ion-icon name=\"help-circle-outline\" style=\"font-size: 16px; position: relative; top:4px;\"></ion-icon></span><span [innerHtml]=\"'poll.hint-only1approved-2-after-wap'|translate\"></span>\n            <!-- assist link: -->\n            &nbsp;<span style=\"white-space: nowrap;\">\n              (<a \n                (click)=\"assist_dialog()\"\n                [innerHtml]=\"'poll.assist-me' | translate\">\n              </a>)\n            </span>\n          </p>\n        </small>\n      </ion-item>\n      <ion-item *ngIf=\"p.my_n_approved > 1 && !p.T.approvals_map.get(oidsorted[0]).get(p.myvid)\" color=\"light\">\n        <small>\n          <p>\n            <span [innerHtml]=\"'poll.hint-mostapproved-1'|translate\"></span><!--&nbsp;\n            <span [innerHtml]=\"'poll.hint-mostapproved-2'|translate\"></span>-->\n          </p>\n        </small>\n      </ion-item>\n    </ng-container>\n\n    <!-- FINAL RESULTS (if closed): -->\n\n    <ng-container *ngIf=\"!running\">\n      <ion-item color=\"light\">\n        <p>\n          Results:\n        </p>\n      </ion-item>\n      <ion-item color=\"danger\">\n        <p>\n          <b>The winner is <i [innerHtml]=\"p.options[oidsorted[0]].name\"></i></b>\n        </p>\n      </ion-item>\n      <ion-item color=\"light\">\n        <p>\n          <small>\n            <span [innerHtml]=\"'poll.final-ratings'|translate\"></span>\n          </small>\n        </p>\n      </ion-item>\n    </ng-container>\n    \n    <!-- INCOMING DELEGATIONS BANNER: -->\n\n    <ion-item *ngIf=\"(accepted_requests.length > 0) || (declined_requests.length > 0)\"\n        color=\"light\">\n      <ion-grid class=\"ion-no-padding ion-no-margin\">\n\n        <!-- SUMMARY: -->\n\n        <ion-row \n            class=\"ion-no-padding ion-no-margin\" \n            style=\"padding-top: 5px; padding-bottom: 6px; cursor: pointer;\"\n            (click)=\"incoming_delegation_expanded =! incoming_delegation_expanded\">\n          <ion-col class=\"ion-no-margin ion-padding-right\" >\n            <small>\n              <ion-icon \n                [name]=\"(incoming_delegation_expanded) ? 'chevron-down-outline' : 'chevron-forward-outline'\" \n                size=\"smaller\" class=\"ion-no-margin\" \n                style=\"color:black; position: relative; left: -2px; top: 2px;\">\n              </ion-icon>\n              <span *ngIf=\"accepted_requests.length > 0\" \n                [innerHtml]=\"\n                  ((n_indirect_clients == 1 ? 'poll.also-for-other' : 'poll.also-for-others' )\n                  | translate: {n_others: n_indirect_clients})\n                  + ' '\n                \">\n              </span>\n              <span *ngIf=\"declined_requests.length > 0\" \n                [innerHtml]=\"(n_indirect_clients == 0 ? 'poll.declined-all' : 'poll.declined-some') | translate\">\n              </span>\n              &nbsp;\n            </small>\n          </ion-col>\n        </ion-row>\n\n        <!-- EXPANDABLE DETAILS: -->\n\n        <!-- Accepted requests: -->\n\n        <ion-row *ngIf=\"incoming_delegation_expanded && accepted_requests.length > 0\">\n          <ion-col class=\"ion-text-right\">\n            <small>\n              <span [innerHtml]=\"'poll.have-accepted' | translate\"></span>\n              <ion-chip *ngFor=\"let r of accepted_requests\" \n                  [routerLink]=\"r.url\" \n                  outline=\"true\">\n                <ion-icon \n                  name=\"mail-open-outline\"\n                  style=\"color:grey\" size=\"small\">\n                </ion-icon>\n                <small>{{r.from}}</small>\n              </ion-chip>\n            </small>\n          </ion-col>\n        </ion-row>\n\n        <!-- Declined requests: -->\n\n        <ion-row *ngIf=\"incoming_delegation_expanded && declined_requests.length > 0\">\n          <ion-col class=\"ion-text-right\">\n            <small>\n              <span [innerHtml]=\"'poll.have-declined' | translate\"></span>\n              <ion-chip *ngFor=\"let r of declined_requests\" \n                  [routerLink]=\"r.url\" \n                  outline=\"true\">\n                <ion-icon \n                  name=\"mail-open-outline\"\n                  style=\"color:grey\" size=\"small\">\n                </ion-icon>\n                <small>{{r.from}}</small>\n              </ion-chip>\n            </small>\n          </ion-col>\n        </ion-row>\n\n      </ion-grid>\n    </ion-item>\n\n    <!-- OUTGOING DELEGATION BANNER: -->\n\n    <ion-item *ngIf=\"delegation_status=='pending'\" \n        color=\"warning\"> \n      <ion-grid class=\"ion-no-padding ion-no-margin\">\n        <ion-row class=\"ion-no-padding ion-no-margin ion-align-items-center\">\n\n          <!-- Info about how many ratings the delegate controls: -->\n\n          <ion-col class=\"ion-no-margin ion-padding-right\">\n            <small>\n              <p>\n                <span style=\"font-size: medium;\">{{delegate}}</span>&nbsp;\n                <span [innerHtml]=\"\n                  'poll.delegate-not-responded' | translate\n                  \">\n                </span>\n              </p>\n            </small>\n          </ion-col>\n\n          <!-- Revoke delegation button: -->\n\n          <ion-col size=\"auto\" class=\"ion-no-margin\">\n            <ion-button \n                [disabled]=\"!running\"\n                fill=\"clear\" (click)=\"revoke_delegation_dialog()\">\n              <ion-icon name=\"trash-outline\" style=\"color:black\"></ion-icon>\n            </ion-button>\n          </ion-col>\n\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n\n    <ion-item *ngIf=\"delegation_status=='agreed'\" \n        color=\"warning\"> \n      <ion-grid class=\"ion-no-padding ion-no-margin\">\n        <ion-row class=\"ion-no-padding ion-no-margin ion-align-items-center\">\n\n          <!-- Info about how many ratings the delegate controls: -->\n\n          <ion-col class=\"ion-no-margin ion-padding-right\">\n            <small>\n              <p>\n                <span style=\"font-size: medium;\">{{delegate}}</span>&nbsp;\n                <span [innerHtml]=\"\n                  'poll.delegate-controls-' \n                  + (n_delegated == oidsorted.length ? 'all' \n                     : 2*n_delegated > oidsorted.length ? 'most' \n                     : n_delegated > 0 ? 'some' : 'none'\n                    ) | translate\n                  \">\n                </span>\n              </p>\n            </small>\n          </ion-col>\n\n          <!-- Revoke delegation button: -->\n\n          <ion-col size=\"auto\" class=\"ion-no-margin\">\n            <ion-button fill=\"clear\" (click)=\"revoke_delegation_dialog()\">\n              <ion-icon name=\"trash-outline\" style=\"color:black\"></ion-icon>\n            </ion-button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n          </ion-col>\n\n          <!-- Help text for delegation toggles: -->\n\n          <ion-col \n              size=\"auto\" \n              class=\"ion-no-padding ion-no-margin ion-padding-left ion-text-right\" \n              style=\"padding-bottom:3px;\">\n            <small>\n              <p>\n                <span [innerHtml]=\"'poll.choose-whose-ratings' | translate\"></span>&nbsp;\n                <ion-icon \n                  name=\"arrow-down-outline\" \n                  style=\"position:relative;top:3px;\">\n                </ion-icon>\n              </p>\n            </small>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-item>\n\n    <!-- TABLE HEADER: -->\n\n    <ion-item class=\"ion-no-padding ion-no-margin\" lines=\"none\"\n          style=\"--min-height: 0px!important; font-weight: bold;\">\n      <small (click)=\"glossary('share')\" style=\"padding-top: 8px!important;padding-left: 16px; width: 74px!important; color: #769596;\">\n<!--        <ion-icon name=\"help-circle-outline\" style=\"position: relative; top: 4px; font-size: medium; padding: 0px; color: #9abcbd\"></ion-icon>--><span class=\"externallink\" [innerHtml]=\"'share'|translate\"></span>\n      </small>\n      <small (click)=\"glossary('wap')\" style=\"padding-top: 8px!important; flex-grow: 1; color: #769596;\"><!--#62a73b;-->\n<!--        <ion-icon name=\"help-circle-outline\" style=\"position: relative; top: 4px; font-size: medium; padding: 0px; color: #9abcbd\"></ion-icon>--><span class=\"externallink\" [innerHtml]=\"'wap'|translate\"></span><!-- &rarr;-->\n      </small>\n      <!-- TODO: make padding robustly correct accross devices: -->\n      <small (click)=\"glossary('approve')\" [style]=\"'padding-top: 8px!important; padding-right: '+(delegation_status=='agreed'?62:10)+'px; color: #769596;'\"><!--#9abcbd--><!--&larr; -->\n        <ion-icon name=\"caret-down\" style=\"position: relative; top: 2px;\"></ion-icon>\n        <span class=\"externallink\" [innerHtml]=\"'approval'|translate\"></span><!--<ion-icon name=\"help-circle-outline\" style=\"position: relative; top: 4px; font-size: medium; padding: 0px;  color: #9abcbd\"></ion-icon>-->\n      </small>\n    </ion-item>\n\n    <!-- OPTIONS: -->\n\n    <ion-item *ngFor=\"let item of [].constructor(oidsorted.length); let i = index\" style=\"align-items:flex-start\">\n\n      <!-- ALWAYS VISIBLE STUFF: -->\n\n      <ion-grid class=\"ion-no-padding ion-no-margin\">\n\n        <ion-row class=\"ion-no-padding ion-no-margin\">\n\n          <!-- PIE CHART WITH WINNING PROBABILITY: -->\n\n          <ion-col size=\"auto\" class=\"ion-no-padding ion-no-margin\">\n            <div style=\"width: 60px!important\"></div>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"60px\" height=\"60px\" style=\"position:absolute; bottom:0px;\"><!--top:12px;-->\n              <circle cx=\"21\" cy=\"25\" r=\"20\" fill=\"#bce4e5\" stroke=\"none\" />\n              <path [id]=\"'pie_'+oidsorted[i]\" d=\"M 21,25 l 0,-20 a 20 20 0 0 1 0 0 Z\" fill=\"#9abcbd\" />\n              <line [attr.display]=\"option_expanded[oidsorted[i]] ? 'inline' : 'none'\"\n                x1=\"21\" y1=\"48\" x2=\"21\" y2=\"60\" stroke=\"#769596\" stroke-width=\"1\" stroke-dasharray=\"1 1\"></line>\n            </svg>\n          </ion-col>\n\n          <ion-col>\n\n            <ion-grid class=\"ion-no-padding ion-no-margin\">\n\n              <ion-row class=\"ion-no-padding ion-no-margin\" style=\"padding-top: 8px; cursor: pointer; position: relative; left: -6px; z-index:20; \"\n                  (click)=\"expand(oidsorted[i])\">\n                <ion-col class=\"ion-no-padding ion-no-margin\">\n\n  \n                  <ion-label class=\"ion-no-padding ion-no-margin\">\n  \n                    <ion-icon \n                      [name]=\"(option_expanded[oidsorted[i]]) ? 'chevron-down-outline' : 'chevron-forward-outline'\" \n                      size=\"small\" class=\"ion-no-margin\" \n                      style=\"color:black; position: relative; top: 3px;\">\n                    </ion-icon>\n\n                    <!-- OPTION NAME: -->\n  \n                    <b><i>&nbsp;<span [innerHtml]=\"p.options[oidsorted[i]].name\"></span>&nbsp;</i></b>\n                  </ion-label>\n  \n                </ion-col>\n              </ion-row>\n\n              <!-- RATING CONTROLS: -->\n\n              <ion-row class=\"ion-no-padding ion-no-margin\">\n\n                <ion-col \n                    [id]=\"'_slider_'+oidsorted[i]+'_'+sortingcounter\"\n                    class=\"ion-no-padding ion-no-margin\" \n                    (click)=\"onRatingColClick(oidsorted[i], $event)\" \n                    (pointerdown)=\"onRatingColPointerdown(oidsorted[i], $event)\" \n                    (touchstart)=\"onRatingColTouchstart(oidsorted[i], $event)\" \n                    (touchup)=\"onRatingColTouchup(oidsorted[i], $event)\"\n                    (pointerup)=\"onRatingColPointerup(oidsorted[i], $event)\"\n                    >\n\n                  <!-- SLIDER: -->\n\n                  <!-- TODO: sometimes looks strange in Chrome (white shadowed large knob, bar displaced too low)-->\n                  <ion-range \n                      [disabled]=\"!running\"\n                      [id]=\"'slider_'+oidsorted[i]+'_'+sortingcounter\" \n                      [color]=\"slidercolor[oidsorted[i]]\"\n                      [value]=\"p.get_my_proxy_rating(oidsorted[i])\" \n                      (ionFocus)=\"onRatingSliderFocus(oidsorted[i])\" \n                      (ionChange)=\"onRatingSliderChange(oidsorted[i])\" \n                      (ionBlur)=\"onRatingSliderBlur(oidsorted[i])\"\n                      mode=\"md\" pin=\"true\" pinFormatter=\"(v)=>100-v\"\n                      min=\"0\" max=\"100\" step=\"1\" snaps=\"true\" ticks=\"false\"\n                      [style]=\"''\n                        + (rate_yourself_toggle[oidsorted[i]] || delegation_status!='agreed'\n                        ? 'pointer-events:; --bar-height: 7px; --knob-size: 35px'\n                        : 'pointer-events: none; --bar-height: 5px; --knob-size: 17px')\" \n                      class=\"ion-no-padding ion-no-margin\">\n\n                    <ion-label \n                        slot=\"end\" \n                        class=\"ion-no-padding ion-no-margin\" \n                        style=\"margin-right:12px;\">\n                        <!--don't do width:100% in ion-label since otherwise the slider is not working properly!-->\n\n                      <!-- APPROVAL BAR: -->\n\n                      <div style=\"position: absolute; bottom: 0px; right: 11px; z-index: -10; width: 100%; padding-left: 11px\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"35px\">\n                          <rect [id]=\"'bar_' + oidsorted[i]\" \n                            x=\"100%\" width=\"0%\" y=\"8\" height=\"18\" \n                            fill=\"#bce4e5\" stroke=\"none\" /><!--Note: width will change dynamically-->\n                          <line x1=\"100%\" y1=\"0\" x2=\"100%\" y2=\"34\" fill=\"none\" stroke=\"#bce4e5\" stroke-width=\"5\" />\n                          <!--<rect x=\"0%\" width=\"100%\" y=\"16\" height=\"2\" fill=\"#b4dbdb\" stroke=\"none\" />-->\n                        </svg>\n                      </div>\n\n                      <!-- Numerical annotations when expanded: -->\n\n                      <div style=\"position: absolute; bottom: 0px; right: 11px; z-index: 10; width: 100%; padding-left: 11px; pointer-events: none;\">\n                        <svg [attr.display]=\"option_expanded[oidsorted[i]] ? 'inline' : 'none'\" \n                            xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"45px\">\n                          <!--\n                          <text x=\"0%\" y=\"20\" \n                            style=\"font-weight: bold; font-size: 12px;\" fill=\"slidercolor[oidsorted[i]]\" \n                            [innerHtml]=\"p.get_my_proxy_rating(oidsorted[i])\">\n                          </text>\n                          -->\n                          <text x=\"100%\" y=\"15\" \n                            style=\"font-weight: bold; font-size: 12px;\" text-anchor=\"end\" fill=\"#9abcbd\" [innerHtml]=\"\n                              Math.round(p.T.approval_scores_map.get(oidsorted[i]) / Math.max(1, p.T.n_not_abstaining) * 1000) / 10 + '%&nbsp;&nbsp;'\n                            \">\n                          </text>\n                        </svg>\n                      </div>\n\n                      <!-- DELEGATE'S RATING -->\n\n                      <div style=\"position: absolute; top: -2px; right: 11px; z-index: -5; width: 100%; padding-left: 11px\"\n                          [style.display]=\"delegation_status=='agreed' && rate_yourself_toggle[oidsorted[i]] ? 'inline' : 'none'\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"15px\">\n                          <line [id]=\"'del_needle_' + oidsorted[i]\" x1=\"0\" y1=\"8\" x2=\"50%\" y2=\"8\" fill=\"none\" stroke=\"#9abcbd\" stroke-width=\"2\" stroke-dasharray=\"3 2\" />\n                          <circle [id]=\"'del_knob_' + oidsorted[i]\" cx=\"50%\" cy=\"8\" r=\"5\" fill=\"#9abcbd\" stroke=\"none\"/>\n                          <!--FIXME: circle is cropped when close to either endpoint. how to avoid this?-->\n                        </svg>\n                      </div>\n\n                    </ion-label>\n                  </ion-range>\n                </ion-col>\n\n                <!-- DELEGATION TOGGLE: -->\n\n                <ion-col *ngIf=\"delegation_status=='agreed'\" \n                    class=\"ion-no-margin ion-no-padding\" \n                    size=\"auto\">&nbsp;&nbsp;&nbsp;\n                  <ion-toggle [id]=\"'rate_yourself_toggle_' + oidsorted[i]\" \n                    [disabled]=\"!running\"\n                    (ionChange)=\"on_rate_yourself_toggle_change(oidsorted[i])\"\n                    class=\"ion-no-margin ion-no-padding ion-padding-bottom ion-padding-top\" \n                    style=\"position:relative; top:-8px;\" \n                    [(ngModel)]=\"rate_yourself_toggle[oidsorted[i]]\">\n                  </ion-toggle>\n                  <div style=\"position:absolute; z-index:10; top:22px; right:1px; text-align:right;\">\n                    <small [innerHtml]=\"\n                      rate_yourself_toggle[oidsorted[i]] \n                      ? ('poll.my-own' | translate) \n                      : ('poll.delegate-s' | translate: {delegate: delegate})\n                      \" >\n                    </small>\n                  </div>\n                </ion-col>  \n              </ion-row>\n            </ion-grid>\n          </ion-col>\n        </ion-row>\n        <ion-row class=\"ion-no-padding ion-no-margin\">\n          <ion-col class=\"ion-no-padding ion-no-margin\">\n            <ion-grid class=\"ion-no-padding ion-no-margin\">\n\n              <!-- EXPANDABLE OPTION DETAILS -->\n\n              <app-expandable [id]=\"'expander_'+oidsorted[i]+'_'+sortingcounter\" \n                  [expanded]=\"option_expanded[oidsorted[i]]\">\n                <ion-row class=\"ion-no-padding ion-padding-bottom ion-no-margin\">\n                  <ion-col class=\"ion-no-padding ion-no-margin\">\n                    <b>\n                      <!-- Winning chance/budget share: -->\n                      <span style=\"color:#769596;\">\n                        <span style=\"white-space: nowrap;\" [innerHtml]=\"\n                          (p.type == 'winner' \n                              ? (running?'poll.chance-to-win':'poll.final-chance-to-win') \n                              : (running?'poll.of-the-budget':'poll.final-budget')) \n                          | translate: {percentage: \n                            Math.round(p.T.shares_map.get(oidsorted[i]) * 1000) / 10\n                          }\">\n                        </span><small><wbr> <span style=\"color:#4c822e;\" \n                            [style.display]=\"(votedfor == oidsorted[i]) ? 'inline' : 'none'\"\n                            [innerHtml]=\"'poll.including-your-share' | translate\">\n                          </span>,\n                        </small>\n                      </span><small><wbr> </small>\n                      <!-- Approval: -->\n                      <span style=\"color:#9abcbd; white-space: nowrap;\">\n                        <span [innerHtml]=\"\n                          'poll.approved-by' | translate: {percentage:\n                            Math.round(p.T.approval_scores_map.get(oidsorted[i]) / Math.max(1, p.T.n_not_abstaining) * 1000) / 10\n                          }\">\n                        </span>\n                      </span>\n                      <small>\n                        <span style=\"color:#62a73b\" \n                          [style.display]=\"approved[oidsorted[i]] ? 'inline' : 'none'\"\n                          [innerHtml]=\"'poll.including-you' | translate\">\n                        </span>\n                      </small>\n                      <small>\n                      <!-- avg. rating: -->\n                      <span *ngIf=\"(i>0 \n                                && p.T.approval_scores_map.get(oidsorted[i-1]) \n                                == p.T.approval_scores_map.get(oidsorted[i])) \n                            || (i<oidsorted.length-1 \n                                && p.T.approval_scores_map.get(oidsorted[i+1]) \n                                == p.T.approval_scores_map.get(oidsorted[i]))\" \n                            style=\"color:#9abcbd\">,\n                        <span style=\"white-space: nowrap;\" [innerHtml]=\"\n                          'poll.average-rating' | translate: {average:\n                            Math.round(p.T.total_effective_ratings_map.get(oidsorted[i]) / Math.max(1, p.T.n_not_abstaining) * 10) / 10\n                          }\">\n                        </span>\n                      </span>&nbsp;\n                      <!-- explanation link: -->\n                      <span style=\"color:#9abcbd; white-space: nowrap;\">\n                        (<a \n                          (click)=\"explain_approval_dialog(oidsorted[i])\"\n                          [innerHtml]=\"'poll.explain' | translate\">\n                        </a>)\n                      </span>\n                    </small>\n                    </b>\n                    <span [style.display]=\"(!!p.options[oidsorted[i]].desc || !!p.options[oidsorted[i]].url) ? 'inline' : 'none'\">\n                      <br/>\n                    </span>\n                    <span [style.display]=\"p.options[oidsorted[i]].desc != '' ? 'inline' : 'none'\">\n                      <i><span [innerHtml]=\"p.options[oidsorted[i]].desc\"></span>&nbsp;&nbsp;</i>\n                    </span>\n                    <span [style.display]=\"p.options[oidsorted[i]].url != '' ? 'inline' : 'none'\">\n                      <small>\n                        (<ion-text \n                            class=\"externallink\" \n                            (click)=\"G.open_url_in_new_tab(G.D.fix_url(p.options[oidsorted[i]].url))\" \n                            [innerHtml]=\"'read-more' | translate\">\n                        </ion-text>)\n                      </small>\n                    </span>\n\n                    <!-- debugging info: - ->\n\n                    <small>\n                      <br/>direct_delegation_map: {{G.map2str(p.direct_delegation_map.get(oidsorted[i]))}}\n                      <br/>inv_direct_delegation_map: {{G.map2str(p.inv_direct_delegation_map.get(oidsorted[i]))}}\n                      <br/>indirect_delegation_map: {{G.map2str(p.indirect_delegation_map.get(oidsorted[i]))}}\n                      <br/>inv_indirect_delegation_map: {{G.map2str(p.inv_indirect_delegation_map.get(oidsorted[i]))}}\n                      <br/>effective_delegation_map: {{G.map2str(p.effective_delegation_map.get(oidsorted[i]))}}\n                      <br/>inv_effective_delegation_map: {{G.map2str(p.inv_effective_delegation_map.get(oidsorted[i]))}}\n                      <br/>ratings_ascending_map: {{G.map2str(p.T.ratings_ascending_map)}}\n                      <br/>thresholds_map: {{G.map2str(p.T.thresholds_map)}}\n                      <br/>approval_scores_map: {{G.map2str(p.T.approval_scores_map)}}\n                      <br/>total_effective_ratings_map: {{G.map2str(p.T.total_effective_ratings_map)}}\n                      <br/>votes_map: {{G.map2str(p.T.votes_map)}}\n                      <br/>n_votes_map: {{G.map2str(p.T.n_votes_map)}}\n                      <br/>shares_map: {{G.map2str(p.T.shares_map)}}\n                    </small>\n                    <!---->\n                    \n                  </ion-col>\n                </ion-row>\n              </app-expandable>\n            </ion-grid>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n\n    </ion-item>\n\n    <!-- ADD OPTION BUTTON: -->\n\n    <ng-container *ngIf=\"running\">\n      <ion-item lines=\"none\" class=\"ion-no-padding\" style=\"padding-left: 10px; padding-top: 10px;\">\n        <ion-fab-button \n          size=\"small\" (click)=\"add_option($event)\" fill=\"clear\" color=\"primary\">\n          <ion-icon name=\"add\"></ion-icon>\n        </ion-fab-button>\n        <ion-button \n          class=\"ion-no-padding ion-no-margin\" fill=\"clear\" (click)=\"add_option($event)\"\n          [innerHtml]=\"'poll.add-option' | translate\"> \n        </ion-button>\n      </ion-item>\n      <ion-item lines=\"none\" style=\"padding-bottom: 10px!important;\">\n        <small [innerHtml]=\"'poll.add-option-info' | translate\"></small>\n      </ion-item>\n    </ng-container>\n\n    <!-- DEBUGGING AREA (not in production mode): -->\n\n    <ng-container *ngIf=\"false && !environment.production\">\n      <ion-item></ion-item>\n      <ion-item class=\"ion-text-right\" lines=\"none\">\n        <ion-col><small><p style=\"color: grey;\">\n          Debugging info: state={{p.state}}, vid={{p.myvid}}, oids={{p.oids}}, oidsorted={{oidsorted}}/{{p.T.oids_descending}}, scores_map={{G.map2str(p.T.scores_map)}}. \n          Simulate state (off:closed, on:running): \n        </p></small></ion-col>\n        <ion-buttons slot=\"end\">\n          <!-- only in debug: simulate closing -->\n          <ion-toggle color=\"light\"\n            [(ngModel)]=\"running\">\n          </ion-toggle>\n        </ion-buttons>\n      </ion-item>\n    </ng-container>\n\n  </ion-list>\n</ion-content>\n\n<!-- OPTIONAL GLOSSARY: -->\n\n<ion-footer *ngIf=\"show_glossary\" style=\"box-shadow: 0px -3px 4px #eeeeee;\">\n  <ion-item color=\"light\">\n    <ion-text>\n    <ion-button (click)=\"dismiss_glossary()\" fill=\"clear\" class=\"ion-float-right ion-margin-right ion-margin-left ion-no-padding\"\n        style=\"position: relative; right: -6px; top: 3px;\">\n      <ion-icon class=\"ion-no-margin ion-no-padding\" slot=\"icon-only\" name=\"close\" color=\"primary\"></ion-icon>\n    </ion-button>\n    <small [innerHtml]=\"'glossary.'+glossary_key|translate\"></small>\n  </ion-text>\n  </ion-item>\n</ion-footer>\n","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { LoadingController, IonContent, IonRouterOutlet, PopoverController, AlertController, ModalController } from '@ionic/angular'; \n\nimport { environment } from '../../environments/environment';\nimport { GlobalService } from \"../global.service\";\nimport { Poll } from '../poll.service';\nimport { news_t } from '../data.service';\n\nimport { DelegationDialogPage } from '../delegation-dialog/delegation-dialog.module';  \nimport { AssistPage } from '../assist/assist.module';  \nimport { AddoptionDialogPage } from '../addoption-dialog/addoption-dialog.module';  \nimport { ExplainApprovalPage } from '../explain-approval/explain-approval.module';  \n\n@Component({\n  selector: 'app-poll',\n  templateUrl: './poll.page.html',\n  styleUrls: ['./poll.page.scss'],\n})\nexport class PollPage implements OnInit {\n\n  Array = Array;\n  Math = Math;\n  Object = Object;\n  window = window;\n  environment = environment;\n\n  @ViewChild(IonContent, { static: false }) content: IonContent;\n\n  page = \"poll\";\n\n  pid: string;\n  p: Poll;\n  running: boolean = true;\n\n  delegate: string;\n  delegation_status = \"none\";\n\n  n_indirect_clients = 1;\n  accepted_requests = [];\n  declined_requests = [];\n\n  oidsorted: string[] = [];\n  sortingcounter: number = 0;\n\n  approved = {}; // whether option is approved by me\n  votedfor = null; // oid my prob. share goes to\n\n  // gui layout choices by user:\n  details_expanded = true;\n  incoming_delegation_expanded = false;\n  option_expanded = {};\n\n  // other:\n\n  pieradius = 20;\n  two_pi = 2*Math.PI; \n  slidercolor = {};\n\n  refresh_paused = false;\n  needs_refresh = false;\n\n  scroll_position = 0;\n  rate_yourself_toggle: Record<string, boolean> = {};\n  n_delegated = 0;\n\n  news: Set<news_t> = new Set();\n\n  // LIFECYCLE:\n\n  ready = false;  \n\n  constructor(\n      private changeDetector: ChangeDetectorRef,\n      private router: Router,\n      private route: ActivatedRoute,\n      private routerOutlet: IonRouterOutlet,\n      public loadingController: LoadingController,\n      public alertCtrl: AlertController,\n      private popover: PopoverController,\n      private modalController: ModalController,\n      public translate: TranslateService,\n      public G: GlobalService) {\n    this.G.L.entry(\"PollsPage.constructor\");\n    // get pid of opened poll:\n    this.route.params.subscribe( params => { \n      this.pid = params['pid'];\n    } );\n  }\n\n  ngOnInit() {\n    this.G.L.entry(\"PollsPage.ngOnInit\");\n  }\n\n  ionViewWillEnter() {\n    this.G.L.entry(\"PollPage.ionViewWillEnter\");\n    this.G.D.page = this;\n    const f = (ev => { this.changeDetector.detectChanges(); });\n    window.addEventListener('offline', f);\n    window.addEventListener('online', f);\n    // get gui state:\n    const specs = JSON.parse(this.G.D.getp(this.pid, \"poll_page\")) || {};\n    this.details_expanded = (specs['details_expanded'] != false);\n    this.incoming_delegation_expanded = (specs['incoming_delegation_expanded'] == true);\n    this.option_expanded = specs['option_expanded'] || {};\n    this.G.L.exit(\"PollPage.ionViewWillEnter\", specs);\n  }\n\n  ionViewDidEnter() {\n    this.G.L.entry(\"PollPage.ionViewDidEnter\");\n    if (this.G.D.ready) {\n      this.onDataReady();\n    }\n    this.G.L.debug(\"PollPage.ready:\", this.ready);\n  }\n\n  onDataReady() {\n    // called when DataService initialization was slower than view initialization\n    this.G.L.entry(\"PollPage.onDataReady\");\n    if (this.pid in this.G.P.polls) {\n      this.p = this.G.P.polls[this.pid];\n      if (this.p.state == 'draft') {\n        this.G.L.error(\"PollPage not showing draft poll, redirecting to mypolls page\", this.pid);\n        this.router.navigate([\"/mypolls\"]);\n      } else {\n        this.G.L.info(\"PollPage showing poll\", this.pid);\n      }\n      // TODO: check if running or closed!\n    } else {\n      this.G.L.warn(\"PollPage unknown pid ignored, redirecting to mypolls page\", this.pid, this.G.P.polls);\n      this.router.navigate([\"/mypolls\"]);\n      return;\n    }\n    this.p.tally_all();\n    // TODO: optimize sorting performance:\n    this.oidsorted = [...this.p.T.oids_descending]; \n    this.ready = true;\n    this.update_order(true);\n    /*\n    for (let oid of this.oidsorted) {\n      this.option_expanded[oid] = false;\n    }\n    */\n    window.setTimeout(() => {\n      this.update_order.bind(this)(true);\n      this.show_stats.bind(this)();\n    }, 200);\n    this.update_delegation_info();\n    this.on_delegate_toggle_change();\n    this.p.have_seen = true;\n    this.G.L.exit(\"PollPage.onDataReady\");\n  }\n\n  onDataChange() {\n    this.G.L.entry(\"PollPage.onDataChange\");\n    this.p.tally_all();\n    this.update_order();\n    this.update_delegation_info();\n    this.news = this.G.N.filter({pid: this.pid});\n    this.changeDetector.detectChanges();\n    this.G.L.exit(\"PollPage.onDataChange\");\n  }\n\n  ionViewWillLeave() {\n    // make sure current slider values are really stored in database:\n    for (let oid of this.oidsorted) {\n      if (!this.delegate || this.rate_yourself_toggle[oid]) {\n        this.p.set_my_own_rating(oid, Math.round(this.get_slider_value(oid)), true);\n      }\n    }\n    // dismiss auto-dismissing news:\n    for (const news of this.news) {\n      if (news.auto_dismiss) {\n        this.G.N.dismiss(news.key);\n      }\n    }\n    // store gui state:\n    const specs = {\n      'details_expanded': this.details_expanded,\n      'incoming_delegation_expanded': this.incoming_delegation_expanded,\n      'option_expanded': this.option_expanded\n    }\n    this.G.D.setp(this.pid, \"poll_page\", JSON.stringify(specs));\n    this.G.L.exit(\"PollPage.ionViewWillLeave\", specs);\n  }\n\n  ionViewDidLeave() {\n    this.G.L.entry(\"PollPage.ionViewDidLeave\");\n    this.G.D.save_state();\n    this.G.L.exit(\"PollPage.ionViewDidLeave\");\n  }\n\n  update_delegation_info() {\n    // determine own weight:\n    this.n_indirect_clients = this.p.get_n_indirect_clients(this.p.myvid);\n    // find incoming delegations:\n    const cache = this.G.D.incoming_dids_caches[this.pid];\n    this.accepted_requests = [];\n    this.declined_requests = [];\n    if (cache) {\n      for (let [did, [from, url, status]] of cache) {\n        if (status == 'agreed') {\n          this.accepted_requests.push({from:from, url:url});\n        } else if (status.startsWith('declined')) {\n          this.declined_requests.push({from:from, url:url});\n        } \n      }\n    }\n    // find outgoing delegation:\n    const did = this.G.Del.get_my_outgoing_dids_cache(this.pid).get(\"*\");\n    this.G.L.trace(\"PollPage.update_delegation_info did\", did);\n    if (did) {\n      this.delegate = this.G.Del.get_delegate_nickname(this.pid, did);\n      const agreement = this.G.Del.get_agreement(this.pid, did);\n      this.G.L.trace(\"PollPage.update_delegation_info agreement\", agreement);\n      this.delegation_status = agreement.status;\n    }\n    this.update_delegation_toggles();\n  }\n\n  update_delegation_toggles() {\n    for (let oid of this.oidsorted) {\n      let did = this.G.Del.get_my_outgoing_dids_cache(this.pid).get(oid);\n      if (!did) {\n        did = this.G.Del.get_my_outgoing_dids_cache(this.pid).get(\"*\");\n      }\n      if (did) {\n        const a = this.G.Del.get_agreement(this.pid, did);\n        this.G.L.trace(\"PollPage found did, agreement\", oid, did, a, [...a.accepted_oids], [...a.active_oids]);\n        this.rate_yourself_toggle[oid] = !a.active_oids.has(oid);\n      } else {\n        this.G.L.trace(\"PollPage found no did for\", oid);\n        this.rate_yourself_toggle[oid] = true;\n      }\n    }\n  }\n\n  async onScroll(ev) {\n    /** find scroll position to be able to react to it */ \n    // TODO: make sure the page does not scroll away under a \"held\" slider?\n    // if so, this.scroll_position needs to be used somehow to adjust the window's actual scroll position in that case...\n    /*\n    const elem = this.content;\n  \n    // the ion content has its own associated scrollElement\n    const scrollElement = await ( elem as any).getScrollElement();\n  \n    const totalContentHeight = scrollElement.scrollHeight;\n    const viewportHeight = scrollElement.offsetHeight;\n    const scrollPosition = ev.detail.scrollTop;\n    this.scroll_position = scrollPosition;\n    */\n    this.scroll_position = ev.detail.scrollTop;      \n  }\n\n  on_rate_yourself_toggle_change(oid:string) {\n//    const new_rating = this.p.own_ratings_map.get(oid).get(this.p.myvid);\n    // update delegation data:\n    this.G.Del.update_my_delegation(this.pid, oid, !this.rate_yourself_toggle[oid]);\n    // update slider value:\n//    this.get_slider(oid).value = new_rating.toString();\n    this.on_delegate_toggle_change();\n  }\n\n  on_delegate_toggle_change() {\n    // update n_delegated: // TODO: make more efficient\n    let sum = 0;\n    for (let [oid, b] of Object.entries(this.rate_yourself_toggle)) {\n      if (!b) sum++;\n    }\n    this.n_delegated = sum;\n  }\n\n  show_stats() { \n    /** update pies and bars, but not order! */\n    if (!this.ready) {\n      return\n    }\n    this.G.L.entry(\"PollPage.show_stats\");\n    const p = this.p, T = p.T, myvid = p.myvid, \n          approval_scores_map = T.approval_scores_map,\n          shares_map = T.shares_map, approvals_map = T.approvals_map;\n    this.votedfor = T.votes_map.get(this.p.myvid);\n    for (const oid of p.oids) {\n      // FIXME: bar and pie are sometimes null here, but not when running the getElementById in the console. why?\n      const a = (approval_scores_map.get(oid) / T.n_not_abstaining) || 0,\n            share = shares_map.get(oid),\n            bar = <SVGRectElement><unknown>document.getElementById('bar_'+oid),\n            pie = <SVGPathElement><unknown>document.getElementById('pie_'+oid),\n            R = this.pieradius,\n            dx = R * Math.sin(this.two_pi * share),\n            dy = R * (1 - Math.cos(this.two_pi * share)),\n            more_than_180_degrees_flag = share > 0.5 ? 1 : 0; \n      this.approved[oid] = approvals_map.get(oid).get(myvid);\n      if (bar) {\n        bar.width.baseVal.valueAsString = (100 * a).toString() + '%';\n        bar.x.baseVal.valueAsString = (100 * (1 - a)).toString() + '%';\n      } else {\n        this.G.L.warn(\"PollPage.show_stats couldn't change slider bar\", oid);\n      }\n      if (pie) {\n        if (share < 1) {\n          pie.setAttribute('d', \"M 21,25 l 0,-\"+R+\" a \"+R+\" \"+R+\" 0 \"+more_than_180_degrees_flag+\" 1 \"+dx+\" \"+dy+\" Z\");\n        } else { // a full circle\n          pie.setAttribute('d', \"M 21,25 l 0,-20 a 20 20 0 1 1 0 \"+(2*R)+\" a 20 20 0 1 1 0 \"+(-2*R)+\" Z\");\n        }\n      } else {\n        this.G.L.warn(\"PollPage.show_stats couldn't change pie piece\", oid);\n      }\n      this.set_slider_color(oid, p.get_my_proxy_rating(oid));\n      if (this.rate_yourself_toggle[oid]) {\n        // update dashed needle showing delegate's rating\n        const needle = <SVGLineElement><unknown>document.getElementById('del_needle_'+oid),\n              knob = <SVGCircleElement><unknown>document.getElementById('del_knob_'+oid),\n              delegate_vid = this.G.Del.get_potential_effective_delegate(this.pid, oid);\n//        this.G.L.trace(\"PollPage.show_stats needle know delegate_vid\", needle, knob, delegate_vid);\n        if (delegate_vid) {\n          const rating = (this.p.proxy_ratings_map.get(oid)||new Map()).get(delegate_vid)||0;\n          this.G.L.trace(\"PollPage.show_stats rating\", rating);\n          if (needle) {\n            needle.x2.baseVal.valueAsString = (rating).toString() + '%';\n          }\n          if (knob) {\n            knob.cx.baseVal.valueAsString = (rating).toString() + '%';\n          }    \n        }\n      }\n    }\n  }\n\n  listeners: Map<any, any[]> = new Map(); // cache for event listeners used in update_order\n  final_rand: number = 0;\n  \n  async update_order(force=false) {\n    // DEBUG:\n    this.final_rand = this.p.make_final_rand(\"umewgfwgemfzgwezfgwefugwfxewgofxiwemhfeoifuhewfiewfumwehxfewmgfgmewfzuwegxzugwef\");\n\n    // TODO: rather have this triggered by tally function!\n    if (this.oidsorted.length != this.p.oids.length) {\n      this.needs_refresh = true;\n    } else {\n      for (let i in this.oidsorted) { // loops over the indices\n        if (this.oidsorted[i] != this.p.T.oids_descending[i]) {\n  //        this.G.L.trace(\"PollPage.update_order\", this.oidsorted[i], this.p.T.oids_descending[i]);\n          this.needs_refresh = true;\n          break;\n        }\n      }  \n    }\n    if (force || (this.needs_refresh && !(this.refresh_paused))) {\n      // link displayed sorting to poll's sorting:\n      const loadingElement = await this.loadingController.create({\n        message: this.translate.instant('poll.sorting'),\n        spinner: 'crescent',\n        duration: 100\n      });\n      await loadingElement.present();\n      await loadingElement.onDidDismiss();\n      // now actually tell html to use the new ordering:\n      this.oidsorted = [...this.p.T.oids_descending];\n      this.sortingcounter++;\n      this.needs_refresh = false;\n      setTimeout(()=>{\n        this.show_stats.bind(this)();\n        // add event listeners to catch events outside knob also on Android:\n        for (let i in this.oidsorted) {\n          const oid = this.oidsorted[i],\n                col = document.getElementById('_slider_'+this.oidsorted[i]+\"_\"+this.sortingcounter),\n                // new event listeners:\n                l1 = (ev => { this.onRatingColPointerdown.bind(this)(oid, ev) }),\n                l2 = (ev => { this.onRatingColPointerup.bind(this)(oid, ev) }),\n                l3 = (ev => { this.onRatingColTouchstart.bind(this)(oid, ev) }),\n                l4 = (ev => { this.onRatingColTouchup.bind(this)(oid, ev) });\n          if (!!col) {\n            if (this.listeners.has(col)) {\n              // remove previous listeners since they might belong to a different oid:\n              this.G.L.trace(\"PollPage.update_order removing old event listeners\");\n              const old = this.listeners.get(col);\n              col.removeEventListener(\"pointerdown\", old[0], true);\n              col.removeEventListener(\"pointerup\", old[1], true);\n              col.removeEventListener(\"touchstart\", old[2], true);\n              col.removeEventListener(\"touchup\", old[3], true);\n            }\n            // add new listeners for this oid:\n            col.addEventListener(\"pointerdown\", l1, true);\n            col.addEventListener(\"pointerup\", l2, true);\n            col.addEventListener(\"touchstart\", l3 , true);\n            col.addEventListener(\"touchup\", l4, true);\n            this.listeners.set(col, [l1, l2, l3, l4]);  \n          }\n        }  \n        //window.alert(\"updated\");\n        this.G.L.trace(\"PollPage.update_order registered event listeners\", this.sortingcounter);\n      }, 100);\n    } \n  }\n\n  set_slider_color(oid: string, value: number) {\n    this.slidercolor[oid] = \n      (value == 0) ? 'vodlered' : \n      (this.votedfor == oid) ? 'vodledarkgreen' :\n      (value + ((this.p.T.approval_scores_map.get(oid) / this.p.T.n_not_abstaining) || 0) * 100 <= 100) ? 'vodleblue' : \n      'vodlegreen';\n  }\n\n  // CONTROLS:\n\n  expand(oid: string) {\n    this.option_expanded[oid] = !this.option_expanded[oid];\n  }\n\n  // rating slider:\n  // TODO: 1 second after any change to a rating, wait another second if the pointer/mouse is currently down, else call rating_change_ended().\n\n  get_slider(oid: string) {\n    this.G.L.trace(\"PollPage.get_slider \", this.sortingcounter);\n    return <HTMLInputElement>document.getElementById('slider_'+oid+\"_\"+this.sortingcounter);\n  }\n\n  set_slider_values() {\n    /** update slider knob positions to current proxy ratings from cache */\n    for (let oid of this.p.oids) {\n      this.get_slider(oid).value = this.p.proxy_ratings_map.get(oid).get(this.p.myvid).toString();\n    }\n  }\n\n  get_slider_value(oid: string) {\n    /** get slider knob position */\n    const slider = this.get_slider(oid);\n    return !slider ? 0 : Number(slider.value);\n  }\n\n  apply_sliders_rating(oid: string) {\n    /** update own rating in cache on basis of slider knob position,\n     *  but don't store it in the database yet (see also rating_change_ended()).\n     */\n    if (!this.delegate || this.rate_yourself_toggle[oid]) {\n      this.p.set_my_own_rating(oid, Math.round(this.get_slider_value(oid)), false);\n    }\n    this.show_stats();\n  }\n\n  onRatingSliderFocus(oid: string): boolean {\n    /** called as soon as range slider gets focus */\n    this.G.L.entry(\"PollPage.onRatingSliderFocus\");\n    return true;\n  }\n\n  onRatingSliderChange(oid: string): boolean {\n    /** called whenever a slider is moved */\n    var slider = this.get_slider(oid),\n        value = Number(slider.value);\n    // window.alert(\"onRatingChange \" + value);\n    this.set_slider_color(oid, value);\n    this.apply_sliders_rating(oid);\n    return true;\n  }\n\n  onRatingSliderBlur(oid: string): boolean {\n    /** called when the slider loses focus */\n    this.G.L.entry(\"PollPage.onRatingSliderBlur\");\n    this.rating_change_ended(oid);\n    return true;\n  }\n\n  rating_change_ended(oid: string) {\n    /** Called right after releasing the slider. \n     *  Stores slider position in own rating cache AND database. */\n    // TODO: make sure this is really always called right after releasing the slider!\n    this.G.L.entry(\"PollPage.rating_change_ended\");\n    if (!this.delegate || this.rate_yourself_toggle[oid]) {\n      this.p.set_my_own_rating(oid, Math.round(this.get_slider_value(oid)), true);\n    }\n    this.update_order();\n    this.G.D.save_state();\n  }\n\n  dragged_oid: string = undefined; // used in onRatingColPointerdown\n\n  // The following three handlers prevent the slider from responding when pointer is not on knob:\n  \n  onRatingColPointerdown(oid: string, ev: Event): boolean {\n    /** event listener called when user starts clicking slider */\n    if (!this.running) return false;\n    this.dragged_oid = oid;\n    const pos = this.get_knob_pos(oid), x = !ev ? 0 : (ev instanceof PointerEvent) ? (<PointerEvent>ev).clientX : (<TouchEvent>ev).touches[0].clientX;\n    this.G.L.entry(\"onRatingColPointerdown\", this.sortingcounter, oid, this.p.options[oid].name, x, pos);\n    // window.alert(\"onRatingColPointerdown \" + pos.left + \" \" + x + \" \" + pos.right);\n    if ((x < pos.left) || (x > pos.right)) {\n      this.swallow_event(ev);\n      return false;\n    }\n    return true;\n  }\n\n  onRatingColTouchstart(oid: string, ev: Event): boolean {\n    /** event listener called when user starts touching slider */\n    if (!this.running) return false;\n    this.dragged_oid = oid;\n    const pos = this.get_knob_pos(oid), x = !ev ? 0 : (ev instanceof PointerEvent) ? (<PointerEvent>ev).clientX : (<TouchEvent>ev).touches[0].clientX;\n    this.G.L.entry(\"onRatingColTouchstart\", oid, x, pos);\n    // window.alert(\"onRatingColTouchstart \" + pos.left + \" \" + x + \" \" + pos.right);\n    if ((x < pos.left) || (x > pos.right)) {\n      this.swallow_event(ev);\n      return false;\n    }\n    return true;\n  }\n\n  onRatingColPointerup(oid: string, ev: Event): boolean {\n    /** event listener called when user stops clicking slider */\n    if (!this.running) return false;\n    // FIXME: not always firing on Android if click is too short\n    this.G.L.entry(\"onRatingColPointerup\", oid, this.dragged_oid);\n    if (oid != this.dragged_oid) {\n      this.swallow_event(ev);\n      this.dragged_oid = null;\n      return false;\n    } else {\n      this.rating_change_ended(oid);\n      this.dragged_oid = null;\n      return true;\n    }\n  }\n\n  onRatingColTouchup(oid: string, ev: Event): boolean {\n    /** event listener called when user stops touching slider */\n    if (!this.running) return false;\n    // FIXME: not always firing on Android if click is too short\n    this.G.L.entry(\"onRatingColTouchup\", oid, this.dragged_oid);\n    if (oid != this.dragged_oid) {\n      this.swallow_event(ev);\n      this.dragged_oid = null;\n      return false;\n    } else {\n      this.rating_change_ended(oid);\n      this.dragged_oid = null;\n      return true;\n    }\n  }\n\n  onRatingColClick(oid: string, ev: MouseEvent): boolean {\n    /** event listener called after clicking or touching slider has ended */\n    if (!this.running) return false;\n    const pos = this.get_knob_pos(oid), x = ev.clientX;\n    this.G.L.entry(\"onRatingColClick\", oid, this.p.options[oid].name, x, pos);\n    // window.alert(\"onRatingColClick \" + pos.left + \" \" + x + \" \" + pos.right);\n    if ((x < pos.left) || (x > pos.right)) {\n      this.swallow_event(ev);\n      return false;\n    }\n    return true;\n  }\n\n  onBodyPointerup(ev: Event): boolean {\n    /** event listener called when click ended outside slider area */\n    if (!this.running) return false;\n    // if clicking started in a slider, call that slider's pointerup handler:\n    if (this.dragged_oid) {\n      this.G.L.entry(\"onBodyPointerup\");\n      this.onRatingColPointerup(this.dragged_oid, ev);\n    }\n    return true;\n  }\n\n  onBodyTouchup(ev: Event): boolean {\n    /** event listener called when touching ended outside slider area */\n    if (!this.running) return false;\n    // if touching started in a slider, call that slider's touchup handler:\n    if (this.dragged_oid) {\n      this.G.L.entry(\"onBodyTouchup\");\n      this.onRatingColTouchup(this.dragged_oid, ev);\n    }\n    return true;\n  }\n\n  get_knob_pos(oid: string) {\n    /** get the slider knob position (left and right pixel coordinates)\n     *  to be able to compare with click/touch coordinate:\n     */\n    const slider = this.get_slider(oid), \n          slider_rect = this.get_screen_coords(slider),\n          value = this.get_slider_value(oid),\n          knob_center_x = slider_rect.left + (slider_rect.right - slider_rect.left) * value / 100;\n    this.G.L.trace(\"pointer slider value\", value);\n    return {left: knob_center_x - 20, right: knob_center_x + 20}\n  }\n\n  get_screen_coords(element: HTMLElement): DOMRect {\n    /** get the screen coordinates of an HTML element */\n    if (!element) return new DOMRect();\n    return element.getBoundingClientRect();\n  }\n\n  swallow_event(ev: Event) {\n    /** Stop any form of propagation of an event. \n     *  Used to disable slider reaction outside knob. */\n    this.G.L.trace(\"swallowing event\", ev);\n    // window.alert(\"swallow 1\");\n    // FIXME: does not work in Android app and Chrome-simulated mobile devices yet!\n    if (!!ev) {\n      // window.alert(\"swallow 2\");\n      ev.stopPropagation();\n      ev.stopImmediatePropagation();\n      ev.preventDefault();  \n    }\n  }\n\n  // DIALOGS:\n\n  currentModal = null;\n\n  delegate_dialog(event: Event) {\n    /** open the delegation dialog popover */\n    this.popover.create({\n        event, \n        component: DelegationDialogPage, \n        translucent: true,\n        showBackdrop: true,\n        componentProps: {parent: this}\n      })\n      .then((popoverElement)=>{\n        popoverElement.present();\n      })\n  }\n\n  async assist_dialog() {\n    /** open the assist modal */\n    const modal = await this.modalController.create({\n        component: AssistPage, \n//        translucent: true,\n//        cssClass: 'assist',\n//        showBackdrop: true,\n        componentProps: {P: this},\n//        swipeToClose: true,\n//        presentingElement: this.routerOutlet.nativeEl\n    });\n    modal.present();\n\n    this.currentModal = modal;\n  }\n  \n  explain_approval_dialog(oid: string) {\n    /** open the explanation dialog modal */\n    this.modalController.create({\n        component: ExplainApprovalPage, \n//        translucent: true,\n        cssClass: 'explain-approval',\n        showBackdrop: true,\n        componentProps: {parent: this, oid: oid},\n        swipeToClose: true,\n        presentingElement: this.routerOutlet.nativeEl\n    })\n    .then((modalElement)=>{\n      modalElement.present();\n    })\n  }\n\n  async revoke_delegation_dialog() { \n    /** open the delegation revokation confirmation dialog alert */\n    const confirm = await this.alertCtrl.create({ \n      message: this.translate.instant(\n        'poll.revoke_delegation', {nickname: this.delegate}), \n      buttons: [\n        { \n          text: this.translate.instant('cancel'), \n          role: 'Cancel',\n          handler: () => { \n            console.log('Confirm Cancel.');  \n          } \n        },\n        { \n          text: this.translate.instant('OK'),\n          role: 'Ok', \n          handler: () => {\n            this.G.Del.revoke_delegation(this.pid, this.G.Del.get_my_outgoing_dids_cache(this.pid).get(\"*\"), '*');\n            this.delegate = null;\n            this.delegation_status = 'none';\n            this.update_delegation_info();\n            this.G.D.save_state();\n          } \n        } \n      ] \n    }); \n    await confirm.present(); \n  } \n\n  add_option(event: Event) {\n    /** open the add option dialog popover */\n    // TODO: also add delegation if ospec.type == \"-\"?\n    this.popover.create({\n//      event, // TODO: use this from Ionic v6 on!\n//      side: 'top', // TODO: use this from Ionic v6 on!\n      component: AddoptionDialogPage, \n      translucent: true,\n      showBackdrop: true,\n      cssClass: 'add-option-class',\n      componentProps: {parent: this}\n    })\n    .then((popoverElement)=>{\n      popoverElement.present();\n    })\n  }\n\n  // Glossary buttons:\n\n  show_glossary = false;\n  glossary_key: string;\n\n  glossary(key: string) {\n    this.glossary_key = key;\n    this.show_glossary = true;\n  }\n  dismiss_glossary() {\n    this.show_glossary=false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PollPage } from './poll.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PollPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PollPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PollPageRoutingModule } from './poll-routing.module';\nimport { SharedcomponentsModule } from '../sharedcomponents/sharedcomponents.module';\n\nimport { PollPage } from './poll.page';\nexport { PollPage } from './poll.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PollPageRoutingModule,\n    SharedcomponentsModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [PollPage]\n})\nexport class PollPageModule {}\n"],"sourceRoot":"webpack:///","file":"186.11d8c40a0e7be55d.js"}